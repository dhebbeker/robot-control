<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Robot Control: robot-control-src/src/utils/lazy_creation.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Robot Control
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11fcc4a44a9b64dfb7d33c3f0a78b9e9.xhtml">robot-control-src</a></li><li class="navelem"><a class="el" href="dir_2db2811a5034f27e35c4073bde1407d6.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_609ebbef7d9993506f20c6d1bfb81661.xhtml">utils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">lazy_creation.hpp File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;utility&gt;</code><br />
<code>#include &lt;functional&gt;</code><br />
</div>
<p><a href="lazy__creation_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlazy__creation__details_1_1Forward.xhtml">lazy_creation_details::Forward&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrap a value of type <code>T</code> and perfect-forward it when accessed.  <a href="classlazy__creation__details_1_1Forward.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacelazy__creation__details"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelazy__creation__details.xhtml">lazy_creation_details</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a1c721de2ab5b57d9f6cda47692e75c20"><td class="memTemplParams" colspan="2">template&lt;typename T , typename ... Args&gt; </td></tr>
<tr class="memitem:a1c721de2ab5b57d9f6cda47692e75c20"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacelazy__creation__details.xhtml#a1c721de2ab5b57d9f6cda47692e75c20">lazy_creation_details::make_new</a> (Args &amp;&amp;... args)</td></tr>
<tr class="memdesc:a1c721de2ab5b57d9f6cda47692e75c20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to a new object of type <code>T</code> constructed from <code>args</code>.  <a href="namespacelazy__creation__details.xhtml#a1c721de2ab5b57d9f6cda47692e75c20">More...</a><br /></td></tr>
<tr class="separator:a1c721de2ab5b57d9f6cda47692e75c20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a542c27c7285eedb48df326464fa7c4aa"><td class="memTemplParams" colspan="2">template&lt;typename T , typename ... Args&gt; </td></tr>
<tr class="memitem:a542c27c7285eedb48df326464fa7c4aa"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="lazy__creation_8hpp.xhtml#a542c27c7285eedb48df326464fa7c4aa">createCreatorForNewObject</a> (Args &amp;&amp;... args) -&gt; decltype(std::bind(<a class="el" href="namespacelazy__creation__details.xhtml#a1c721de2ab5b57d9f6cda47692e75c20">lazy_creation_details::make_new</a>&lt; T, Args... &gt;, <a class="el" href="classlazy__creation__details_1_1Forward.xhtml">lazy_creation_details::Forward</a>&lt; Args &gt;(std::forward&lt; Args &gt;(args))...))</td></tr>
<tr class="memdesc:a542c27c7285eedb48df326464fa7c4aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates a creator object which creates a new object when that is called.  <a href="lazy__creation_8hpp.xhtml#a542c27c7285eedb48df326464fa7c4aa">More...</a><br /></td></tr>
<tr class="separator:a542c27c7285eedb48df326464fa7c4aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><dl class="section see"><dt>See also</dt><dd><a href="https://codereview.stackexchange.com/q/127353/">https://codereview.stackexchange.com/q/127353/</a> </dd></dl>
</div><h2 class="groupheader">Function Documentation</h2>
<a id="a542c27c7285eedb48df326464fa7c4aa" name="a542c27c7285eedb48df326464fa7c4aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a542c27c7285eedb48df326464fa7c4aa">&#9670;&nbsp;</a></span>createCreatorForNewObject()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">auto createCreatorForNewObject </td>
          <td>(</td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td> -&gt; decltype(
    std::bind(
        <a class="el" href="namespacelazy__creation__details.xhtml#a1c721de2ab5b57d9f6cda47692e75c20">lazy_creation_details::make_new</a>&lt;T, Args...&gt;,
        <a class="el" href="classlazy__creation__details_1_1Forward.xhtml">lazy_creation_details::Forward</a>&lt;Args&gt;(std::forward&lt;Args&gt;(args))...))
</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates a creator object which creates a new object when that is called. </p>
<p >The object is not created when this function is called. Instead the object is created when the return value of this function is called in turn.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>type of object to be created </td></tr>
    <tr><td class="paramname">Args</td><td>types of arguments to the constructor </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">args</td><td>arguments to the constructor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a callable object which, when called, returns a pointer to a <em>new</em> object of type <code>T</code> constructed from <code>args</code>. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu May 19 2022 09:32:00 for Robot Control by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4
</small></address>
</body>
</html>
