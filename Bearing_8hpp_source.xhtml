<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Robot Control: robot-control-src/src/application/Bearing.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Robot Control
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11fcc4a44a9b64dfb7d33c3f0a78b9e9.xhtml">robot-control-src</a></li><li class="navelem"><a class="el" href="dir_2db2811a5034f27e35c4073bde1407d6.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_6eeebcd6d5bd838603faba3277933c1b.xhtml">application</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">Bearing.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="Bearing_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef APPLICATION_BEARING_HPP_</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define APPLICATION_BEARING_HPP_</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;<a class="code" href="Drives_8hpp.xhtml">Drives.hpp</a>&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &quot;<a class="code" href="board_8hpp.xhtml">board.hpp</a>&quot;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;../utils/PollingStateMachine.hpp&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &quot;../utils/Debug.hpp&quot;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;queue&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;limits&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno"><a class="line" href="Bearing_8hpp.xhtml#ab2160a421badbd1c6834b537cfdd6496">   11</a></span><span class="preprocessor">#define PRINT_CHECKPOINT() DEBUG_MSG_DEBUG(&quot;Passing at &quot;</span> __FILE__ &quot;:%u&quot;, __LINE__)</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="structPolarVector.xhtml">   13</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structPolarVector.xhtml">PolarVector</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="structPolarVector.xhtml#a9ee459f626b003de05316679b7a8e4ba">   15</a></span>  <span class="keywordtype">float</span> <a class="code hl_variable" href="structPolarVector.xhtml#a9ee459f626b003de05316679b7a8e4ba">angle</a>; </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="structPolarVector.xhtml#ad43c3b683c4d529fd280c41d506a8e44">   16</a></span>  <a class="code hl_typedef" href="EnvironmentRecord_8hpp.xhtml#a3174d7717e273f4886b9ef5773d2309a">Distance</a> <a class="code hl_variable" href="structPolarVector.xhtml#ad43c3b683c4d529fd280c41d506a8e44">length</a>; </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>};</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="keywordtype">float</span> <a class="code hl_function" href="Bearing_8hpp.xhtml#a7b16007925caebbd9320f39e84089476">shortenAngle</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>&amp; angle);</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="classBearing.xhtml">   21</a></span><span class="keyword">class </span><a class="code hl_class" href="classBearing.xhtml">Bearing</a> : <span class="keyword">public</span> <a class="code hl_class" href="classPollingStateMachine.xhtml">PollingStateMachine</a></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>{</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <a class="code hl_function" href="classBearing.xhtml#a744fe803a504d2fb2d7df1da4c00693a">Bearing</a>();</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="classBearing.xhtml#a2a1a25bd8ab257b2c5320f971114a581">begin</a>();</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="classBearing.xhtml#a384f489b9cb1913e83f6e35c50298754">stop</a>();</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>};</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="classStopBearing.xhtml">   29</a></span><span class="keyword">class </span><a class="code hl_class" href="classStopBearing.xhtml">StopBearing</a> : <span class="keyword">public</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>{</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <a class="code hl_function" href="classStopBearing.xhtml#a752dbaf042ec504f9131ee1d24f35ded">StopBearing</a>();</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a>* operation() <span class="keyword">override</span>;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>};</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="classLost.xhtml">   37</a></span><span class="keyword">class </span><a class="code hl_class" href="classLost.xhtml">Lost</a>: <span class="keyword">public</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>{</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">drives::Counter</a> maxNumberOfScans = 360 * <a class="code hl_variable" href="namespacedrives.xhtml#aaf81ed0eff4d976648423ca4c8746afc">drives::stepsPerDeg</a>;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">drives::Counter</a> numberOfScan = 0;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <a class="code hl_typedef" href="namespaceboard.xhtml#a7d36f0cae16d6e9df499202919361650">board::Distance</a> minDistance = <a class="code hl_function" href="namespaceutils.xhtml#ac2399f9f0a0dd66786f2a4828831a139">std::numeric_limits&lt;board::Distance&gt;::max</a>();</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">drives::Counter</a> rotationToMinDistance = 0; </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">drives::Counter</a> orientationToMinDistance = 0; </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keywordtype">bool</span> foundBlip = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="classLost.xhtml#ae7b5483df2b31fca1b2dc7ff2612808b">   48</a></span>  <a class="code hl_function" href="classLost.xhtml#ae7b5483df2b31fca1b2dc7ff2612808b">Lost</a>() { <a class="code hl_define" href="Bearing_8hpp.xhtml#ab2160a421badbd1c6834b537cfdd6496">PRINT_CHECKPOINT</a>(); }</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a>* <a class="code hl_function" href="classLost.xhtml#a130724f48444847dd26a6bf3b1693957">operation</a>() <span class="keyword">override</span>;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>};</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="classAligningToWall.xhtml">   60</a></span><span class="keyword">class </span><a class="code hl_class" href="classAligningToWall.xhtml">AligningToWall</a>: <span class="keyword">public</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>{</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keyword">const</span> <a class="code hl_struct" href="structPolarVector.xhtml">PolarVector</a> vectorToWall;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <a class="code hl_function" href="classAligningToWall.xhtml#a2b2cc2ed7967f4f98e9f3e0ea9c5728e">AligningToWall</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structPolarVector.xhtml">PolarVector</a> vectorToWall);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a>* <a class="code hl_function" href="classAligningToWall.xhtml#ad2beed790af8e871e228b564894189d5">operation</a>() <span class="keyword">override</span>;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>};</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="Bearing_8hpp.xhtml#aabaedcbc3c02aad02b93b17fe8e85ddd">   73</a></span><span class="keyword">using </span><a class="code hl_typedef" href="Bearing_8hpp.xhtml#aabaedcbc3c02aad02b93b17fe8e85ddd">DriveOrders</a> =std::queue&lt;PolarVector&gt;;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span><span class="keyword">template</span>&lt;<span class="keyword">class</span> CreatorForNextState&gt;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno"><a class="line" href="classDriving.xhtml">   76</a></span><span class="keyword">class </span><a class="code hl_class" href="classDriving.xhtml">Driving</a>: <span class="keyword">public</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>{</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <a class="code hl_typedef" href="Bearing_8hpp.xhtml#aabaedcbc3c02aad02b93b17fe8e85ddd">DriveOrders</a> driveOrders;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="keywordtype">bool</span> rotated = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  CreatorForNextState creatorForNextState;</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="classDriving.xhtml#ab4921a74397d300154a71ce254c9d535">   83</a></span>  <a class="code hl_function" href="classDriving.xhtml#ab4921a74397d300154a71ce254c9d535">Driving</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="Bearing_8hpp.xhtml#aabaedcbc3c02aad02b93b17fe8e85ddd">DriveOrders</a> &amp;orders, CreatorForNextState creator) :</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>      driveOrders(orders), creatorForNextState(creator)</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  {</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <span class="keyword">using </span>ReturnTypeOfCreator = <span class="keyword">decltype</span>(creator());</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    <span class="keyword">static_assert</span>(std::is_pointer&lt;ReturnTypeOfCreator&gt;::value, <span class="stringliteral">&quot;creator must return a pointer&quot;</span>);</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <span class="keyword">static_assert</span>(</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>        std::is_base_of&lt;PollingStateMachine::State, typename std::remove_pointer&lt;ReturnTypeOfCreator&gt;::type&gt;::value,</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>        <span class="stringliteral">&quot;creator must create an object which has B as PollingStateMachine::State&quot;</span>);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    <a class="code hl_define" href="Bearing_8hpp.xhtml#ab2160a421badbd1c6834b537cfdd6496">PRINT_CHECKPOINT</a>();</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    Serial.printf(<span class="stringliteral">&quot;Taking %u driving orders.\n&quot;</span>, driveOrders.size());</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  }</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno"><a class="line" href="classDriving.xhtml#a5015cc2f866255b0eb6a8e16997da7c4">  105</a></span>  <span class="keyword">virtual</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a>* <a class="code hl_function" href="classDriving.xhtml#a5015cc2f866255b0eb6a8e16997da7c4">operation</a>()<span class="keyword"> override</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="keywordflow">if</span> (!driveOrders.empty())</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    {</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="namespacedrives.xhtml#a3a0afcf776ef59b88676a1276a0635b8">drives::isIdle</a>() &amp;&amp; !<a class="code hl_function" href="namespaceboard.xhtml#ab48d1402797a8b98490b6cc1eb494bbe">board::isBumperPressed</a>())</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>      {</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>        <span class="keyword">const</span> <span class="keyword">auto</span>&amp; currentOrder = driveOrders.front();</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>        <span class="keywordflow">if</span> (!rotated)</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>        {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>          <a class="code hl_define" href="Debug_8hpp.xhtml#a6b2a5fe9fe4f0a1dbe6e61e0a4a3e2a9">DEBUG_MSG_VERBOSE</a>(<span class="stringliteral">&quot;Take order to rotate by %f degrees&quot;</span>, currentOrder.angle);</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>          <a class="code hl_function" href="namespacedrives.xhtml#a24f745263d30a64444076e93f20c0d40">drives::rotate</a>(currentOrder.angle, <a class="code hl_variable" href="namespacedrives.xhtml#a9b8b1953b75737438f8a70891ff1e02c">drives::cruiseSpeed</a>);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>          rotated = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>        }</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>        {</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>          <a class="code hl_define" href="Debug_8hpp.xhtml#a6b2a5fe9fe4f0a1dbe6e61e0a4a3e2a9">DEBUG_MSG_VERBOSE</a>(<span class="stringliteral">&quot;Take order to drive by %imm&quot;</span>, currentOrder.length);</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>          <a class="code hl_function" href="namespacedrives.xhtml#a62b6bc3f6af7476694180f1960ba2f14">drives::drive</a>(currentOrder.length, <a class="code hl_variable" href="namespacedrives.xhtml#a9b8b1953b75737438f8a70891ff1e02c">drives::cruiseSpeed</a>, <span class="keyword">false</span>);</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>          driveOrders.pop();</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>          rotated = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>        }</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>      }</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>      {</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>        <span class="comment">// wait for idle drives and free bumpers</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>      }</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    }</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>    {</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="namespacedrives.xhtml#a3a0afcf776ef59b88676a1276a0635b8">drives::isIdle</a>())</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>      {</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>        <span class="keywordflow">return</span> creatorForNextState();</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>      }</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>      {</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>        <span class="comment">// wait for last command to be finished</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>      }</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    }</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  }</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>};</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span><span class="keyword">template</span>&lt; <span class="keyword">typename</span> CreatorForNextStateType &gt;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="Bearing_8hpp.xhtml#a82076a1647e14f601b7b0e87f3cf4dd7">  158</a></span><a class="code hl_class" href="classDriving.xhtml">Driving&lt;CreatorForNextStateType&gt;</a>* <a class="code hl_function" href="Bearing_8hpp.xhtml#a82076a1647e14f601b7b0e87f3cf4dd7">newDriver</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="Bearing_8hpp.xhtml#aabaedcbc3c02aad02b93b17fe8e85ddd">DriveOrders</a>&amp; orders, CreatorForNextStateType creator)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>{</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code hl_class" href="classDriving.xhtml">Driving&lt;CreatorForNextStateType&gt;</a>(orders, creator);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>}</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno"><a class="line" href="classFollowingWall.xhtml">  163</a></span><span class="keyword">class </span><a class="code hl_class" href="classFollowingWall.xhtml">FollowingWall</a> : <span class="keyword">public</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a></div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>{</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  <a class="code hl_function" href="classFollowingWall.xhtml#a1e6e8a42269be810c6c22380ce9a74db">FollowingWall</a>();</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keyword">virtual</span> <a class="code hl_function" href="classFollowingWall.xhtml#afd962842604acadfdf90213a5cc398c0">~FollowingWall</a>();</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a>* <a class="code hl_function" href="classFollowingWall.xhtml#a5c98f36f73ab290dd3f3018b9f328b65">operation</a>() <span class="keyword">override</span>;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno"><a class="line" href="classFollowingWall.xhtml#a4636a809646b7ba49ededc7668ea5091">  169</a></span>  <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_typedef" href="EnvironmentRecord_8hpp.xhtml#a3174d7717e273f4886b9ef5773d2309a">Distance</a> <a class="code hl_variable" href="classFollowingWall.xhtml#a4636a809646b7ba49ededc7668ea5091">targetDistanceToWall</a> = 100; </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  <a class="code hl_class" href="classPollingStateMachine.xhtml">PollingStateMachine</a>* subStateMachine;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>};</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span><span class="preprocessor">#endif </span><span class="comment">/* APPLICATION_BEARING_HPP_ */</span><span class="preprocessor"></span></div>
<div class="ttc" id="aBearing_8hpp_xhtml_a7b16007925caebbd9320f39e84089476"><div class="ttname"><a href="Bearing_8hpp.xhtml#a7b16007925caebbd9320f39e84089476">shortenAngle</a></div><div class="ttdeci">float shortenAngle(const float &amp;angle)</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:13</div></div>
<div class="ttc" id="aBearing_8hpp_xhtml_a82076a1647e14f601b7b0e87f3cf4dd7"><div class="ttname"><a href="Bearing_8hpp.xhtml#a82076a1647e14f601b7b0e87f3cf4dd7">newDriver</a></div><div class="ttdeci">Driving&lt; CreatorForNextStateType &gt; * newDriver(const DriveOrders &amp;orders, CreatorForNextStateType creator)</div><div class="ttdoc">Creates a new object of the class template Driving and applies automatic template parameter deduction...</div><div class="ttdef"><b>Definition:</b> Bearing.hpp:158</div></div>
<div class="ttc" id="aBearing_8hpp_xhtml_aabaedcbc3c02aad02b93b17fe8e85ddd"><div class="ttname"><a href="Bearing_8hpp.xhtml#aabaedcbc3c02aad02b93b17fe8e85ddd">DriveOrders</a></div><div class="ttdeci">std::queue&lt; PolarVector &gt; DriveOrders</div><div class="ttdef"><b>Definition:</b> Bearing.hpp:73</div></div>
<div class="ttc" id="aBearing_8hpp_xhtml_ab2160a421badbd1c6834b537cfdd6496"><div class="ttname"><a href="Bearing_8hpp.xhtml#ab2160a421badbd1c6834b537cfdd6496">PRINT_CHECKPOINT</a></div><div class="ttdeci">#define PRINT_CHECKPOINT()</div><div class="ttdef"><b>Definition:</b> Bearing.hpp:11</div></div>
<div class="ttc" id="aDebug_8hpp_xhtml_a6b2a5fe9fe4f0a1dbe6e61e0a4a3e2a9"><div class="ttname"><a href="Debug_8hpp.xhtml#a6b2a5fe9fe4f0a1dbe6e61e0a4a3e2a9">DEBUG_MSG_VERBOSE</a></div><div class="ttdeci">#define DEBUG_MSG_VERBOSE(fmt,...)</div><div class="ttdef"><b>Definition:</b> Debug.hpp:43</div></div>
<div class="ttc" id="aDrives_8hpp_xhtml"><div class="ttname"><a href="Drives_8hpp.xhtml">Drives.hpp</a></div></div>
<div class="ttc" id="aEnvironmentRecord_8hpp_xhtml_a3174d7717e273f4886b9ef5773d2309a"><div class="ttname"><a href="EnvironmentRecord_8hpp.xhtml#a3174d7717e273f4886b9ef5773d2309a">Distance</a></div><div class="ttdeci">std::int16_t Distance</div><div class="ttdoc">in [mm]</div><div class="ttdef"><b>Definition:</b> EnvironmentRecord.hpp:7</div></div>
<div class="ttc" id="aboard_8hpp_xhtml"><div class="ttname"><a href="board_8hpp.xhtml">board.hpp</a></div></div>
<div class="ttc" id="aclassAligningToWall_xhtml"><div class="ttname"><a href="classAligningToWall.xhtml">AligningToWall</a></div><div class="ttdef"><b>Definition:</b> Bearing.hpp:61</div></div>
<div class="ttc" id="aclassAligningToWall_xhtml_a2b2cc2ed7967f4f98e9f3e0ea9c5728e"><div class="ttname"><a href="classAligningToWall.xhtml#a2b2cc2ed7967f4f98e9f3e0ea9c5728e">AligningToWall::AligningToWall</a></div><div class="ttdeci">AligningToWall(const PolarVector vectorToWall)</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:25</div></div>
<div class="ttc" id="aclassAligningToWall_xhtml_ad2beed790af8e871e228b564894189d5"><div class="ttname"><a href="classAligningToWall.xhtml#ad2beed790af8e871e228b564894189d5">AligningToWall::operation</a></div><div class="ttdeci">virtual PollingStateMachine::State * operation() override</div><div class="ttdoc">Orders to drive to blip and then follow the wall.</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:31</div></div>
<div class="ttc" id="aclassBearing_xhtml"><div class="ttname"><a href="classBearing.xhtml">Bearing</a></div><div class="ttdef"><b>Definition:</b> Bearing.hpp:22</div></div>
<div class="ttc" id="aclassBearing_xhtml_a2a1a25bd8ab257b2c5320f971114a581"><div class="ttname"><a href="classBearing.xhtml#a2a1a25bd8ab257b2c5320f971114a581">Bearing::begin</a></div><div class="ttdeci">void begin()</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:134</div></div>
<div class="ttc" id="aclassBearing_xhtml_a384f489b9cb1913e83f6e35c50298754"><div class="ttname"><a href="classBearing.xhtml#a384f489b9cb1913e83f6e35c50298754">Bearing::stop</a></div><div class="ttdeci">void stop()</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:139</div></div>
<div class="ttc" id="aclassBearing_xhtml_a744fe803a504d2fb2d7df1da4c00693a"><div class="ttname"><a href="classBearing.xhtml#a744fe803a504d2fb2d7df1da4c00693a">Bearing::Bearing</a></div><div class="ttdeci">Bearing()</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:19</div></div>
<div class="ttc" id="aclassDriving_xhtml"><div class="ttname"><a href="classDriving.xhtml">Driving</a></div><div class="ttdef"><b>Definition:</b> Bearing.hpp:77</div></div>
<div class="ttc" id="aclassDriving_xhtml_a5015cc2f866255b0eb6a8e16997da7c4"><div class="ttname"><a href="classDriving.xhtml#a5015cc2f866255b0eb6a8e16997da7c4">Driving::operation</a></div><div class="ttdeci">virtual PollingStateMachine::State * operation() override</div><div class="ttdoc">Each drive order is executed in two steps:</div><div class="ttdef"><b>Definition:</b> Bearing.hpp:105</div></div>
<div class="ttc" id="aclassDriving_xhtml_ab4921a74397d300154a71ce254c9d535"><div class="ttname"><a href="classDriving.xhtml#ab4921a74397d300154a71ce254c9d535">Driving::Driving</a></div><div class="ttdeci">Driving(const DriveOrders &amp;orders, CreatorForNextState creator)</div><div class="ttdef"><b>Definition:</b> Bearing.hpp:83</div></div>
<div class="ttc" id="aclassFollowingWall_xhtml"><div class="ttname"><a href="classFollowingWall.xhtml">FollowingWall</a></div><div class="ttdef"><b>Definition:</b> Bearing.hpp:164</div></div>
<div class="ttc" id="aclassFollowingWall_xhtml_a1e6e8a42269be810c6c22380ce9a74db"><div class="ttname"><a href="classFollowingWall.xhtml#a1e6e8a42269be810c6c22380ce9a74db">FollowingWall::FollowingWall</a></div><div class="ttdeci">FollowingWall()</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:118</div></div>
<div class="ttc" id="aclassFollowingWall_xhtml_a4636a809646b7ba49ededc7668ea5091"><div class="ttname"><a href="classFollowingWall.xhtml#a4636a809646b7ba49ededc7668ea5091">FollowingWall::targetDistanceToWall</a></div><div class="ttdeci">static constexpr Distance targetDistanceToWall</div><div class="ttdoc">[mm]</div><div class="ttdef"><b>Definition:</b> Bearing.hpp:169</div></div>
<div class="ttc" id="aclassFollowingWall_xhtml_a5c98f36f73ab290dd3f3018b9f328b65"><div class="ttname"><a href="classFollowingWall.xhtml#a5c98f36f73ab290dd3f3018b9f328b65">FollowingWall::operation</a></div><div class="ttdeci">virtual PollingStateMachine::State * operation() override</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:128</div></div>
<div class="ttc" id="aclassFollowingWall_xhtml_afd962842604acadfdf90213a5cc398c0"><div class="ttname"><a href="classFollowingWall.xhtml#afd962842604acadfdf90213a5cc398c0">FollowingWall::~FollowingWall</a></div><div class="ttdeci">virtual ~FollowingWall()</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:123</div></div>
<div class="ttc" id="aclassLost_xhtml"><div class="ttname"><a href="classLost.xhtml">Lost</a></div><div class="ttdef"><b>Definition:</b> Bearing.hpp:38</div></div>
<div class="ttc" id="aclassLost_xhtml_a130724f48444847dd26a6bf3b1693957"><div class="ttname"><a href="classLost.xhtml#a130724f48444847dd26a6bf3b1693957">Lost::operation</a></div><div class="ttdeci">virtual PollingStateMachine::State * operation() override</div><div class="ttdoc">Checks if one of the distance sensors currently senses a shorter distance than previously found.</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:54</div></div>
<div class="ttc" id="aclassLost_xhtml_ae7b5483df2b31fca1b2dc7ff2612808b"><div class="ttname"><a href="classLost.xhtml#ae7b5483df2b31fca1b2dc7ff2612808b">Lost::Lost</a></div><div class="ttdeci">Lost()</div><div class="ttdef"><b>Definition:</b> Bearing.hpp:48</div></div>
<div class="ttc" id="aclassPollingStateMachine_1_1State_xhtml"><div class="ttname"><a href="classPollingStateMachine_1_1State.xhtml">PollingStateMachine::State</a></div><div class="ttdef"><b>Definition:</b> PollingStateMachine.hpp:13</div></div>
<div class="ttc" id="aclassPollingStateMachine_xhtml"><div class="ttname"><a href="classPollingStateMachine.xhtml">PollingStateMachine</a></div><div class="ttdef"><b>Definition:</b> PollingStateMachine.hpp:4</div></div>
<div class="ttc" id="aclassStopBearing_xhtml"><div class="ttname"><a href="classStopBearing.xhtml">StopBearing</a></div><div class="ttdef"><b>Definition:</b> Bearing.hpp:30</div></div>
<div class="ttc" id="aclassStopBearing_xhtml_a752dbaf042ec504f9131ee1d24f35ded"><div class="ttname"><a href="classStopBearing.xhtml#a752dbaf042ec504f9131ee1d24f35ded">StopBearing::StopBearing</a></div><div class="ttdeci">StopBearing()</div><div class="ttdef"><b>Definition:</b> Bearing.cpp:144</div></div>
<div class="ttc" id="anamespaceboard_xhtml_a7d36f0cae16d6e9df499202919361650"><div class="ttname"><a href="namespaceboard.xhtml#a7d36f0cae16d6e9df499202919361650">board::Distance</a></div><div class="ttdeci">decltype(VL53L1_RangingMeasurementData_t::RangeMilliMeter) Distance</div><div class="ttdef"><b>Definition:</b> board.hpp:20</div></div>
<div class="ttc" id="anamespaceboard_xhtml_ab48d1402797a8b98490b6cc1eb494bbe"><div class="ttname"><a href="namespaceboard.xhtml#ab48d1402797a8b98490b6cc1eb494bbe">board::isBumperPressed</a></div><div class="ttdeci">bool isBumperPressed()</div><div class="ttdef"><b>Definition:</b> board.cpp:196</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a24f745263d30a64444076e93f20c0d40"><div class="ttname"><a href="namespacedrives.xhtml#a24f745263d30a64444076e93f20c0d40">drives::rotate</a></div><div class="ttdeci">void rotate(const float deg, const Amplitude amplitude)</div><div class="ttdef"><b>Definition:</b> Drives.cpp:186</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a3a0afcf776ef59b88676a1276a0635b8"><div class="ttname"><a href="namespacedrives.xhtml#a3a0afcf776ef59b88676a1276a0635b8">drives::isIdle</a></div><div class="ttdeci">bool isIdle()</div><div class="ttdef"><b>Definition:</b> Drives.cpp:237</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a62b6bc3f6af7476694180f1960ba2f14"><div class="ttname"><a href="namespacedrives.xhtml#a62b6bc3f6af7476694180f1960ba2f14">drives::drive</a></div><div class="ttdeci">void drive(const float distance, const Amplitude amplitude, const bool backwards)</div><div class="ttdef"><b>Definition:</b> Drives.cpp:194</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a9b8b1953b75737438f8a70891ff1e02c"><div class="ttname"><a href="namespacedrives.xhtml#a9b8b1953b75737438f8a70891ff1e02c">drives::cruiseSpeed</a></div><div class="ttdeci">constexpr Amplitude cruiseSpeed</div><div class="ttdef"><b>Definition:</b> Drives.hpp:17</div></div>
<div class="ttc" id="anamespacedrives_xhtml_aaf81ed0eff4d976648423ca4c8746afc"><div class="ttname"><a href="namespacedrives.xhtml#aaf81ed0eff4d976648423ca4c8746afc">drives::stepsPerDeg</a></div><div class="ttdeci">constexpr float stepsPerDeg</div><div class="ttdoc">This was measured by rotating by 200 steps and then measuring the rotation.</div><div class="ttdef"><b>Definition:</b> Drives.hpp:22</div></div>
<div class="ttc" id="anamespacedrives_xhtml_ae2737c48a427beb4c656b583c2727aa6"><div class="ttname"><a href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">drives::Counter</a></div><div class="ttdeci">std::uint16_t Counter</div><div class="ttdef"><b>Definition:</b> Drives.hpp:14</div></div>
<div class="ttc" id="anamespaceutils_xhtml_ac2399f9f0a0dd66786f2a4828831a139"><div class="ttname"><a href="namespaceutils.xhtml#ac2399f9f0a0dd66786f2a4828831a139">utils::max</a></div><div class="ttdeci">constexpr const T &amp; max(const T &amp;a, const T &amp;b)</div><div class="ttdef"><b>Definition:</b> algorithm.hpp:6</div></div>
<div class="ttc" id="astructPolarVector_xhtml"><div class="ttname"><a href="structPolarVector.xhtml">PolarVector</a></div><div class="ttdef"><b>Definition:</b> Bearing.hpp:14</div></div>
<div class="ttc" id="astructPolarVector_xhtml_a9ee459f626b003de05316679b7a8e4ba"><div class="ttname"><a href="structPolarVector.xhtml#a9ee459f626b003de05316679b7a8e4ba">PolarVector::angle</a></div><div class="ttdeci">float angle</div><div class="ttdoc">in degrees</div><div class="ttdef"><b>Definition:</b> Bearing.hpp:15</div></div>
<div class="ttc" id="astructPolarVector_xhtml_ad43c3b683c4d529fd280c41d506a8e44"><div class="ttname"><a href="structPolarVector.xhtml#ad43c3b683c4d529fd280c41d506a8e44">PolarVector::length</a></div><div class="ttdeci">Distance length</div><div class="ttdoc">in mm</div><div class="ttdef"><b>Definition:</b> Bearing.hpp:16</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu May 19 2022 09:32:00 for Robot Control by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4
</small></address>
</body>
</html>
