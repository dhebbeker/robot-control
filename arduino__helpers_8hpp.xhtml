<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Robot Control: robot-control-src/src/utils/arduino_helpers.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Robot Control
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11fcc4a44a9b64dfb7d33c3f0a78b9e9.xhtml">robot-control-src</a></li><li class="navelem"><a class="el" href="dir_2db2811a5034f27e35c4073bde1407d6.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_609ebbef7d9993506f20c6d1bfb81661.xhtml">utils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">arduino_helpers.hpp File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;Arduino.h&gt;</code><br />
<code>#include &lt;cassert&gt;</code><br />
<code>#include &quot;<a class="el" href="Debug_8hpp_source.xhtml">Debug.hpp</a>&quot;</code><br />
<code>#include &lt;cstddef&gt;</code><br />
<code>#include &lt;utility&gt;</code><br />
<code>#include &lt;Esp.h&gt;</code><br />
</div>
<p><a href="arduino__helpers_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="define-members" name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a8a40d3489d8d1b60ee4760237c9c4d6d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arduino__helpers_8hpp.xhtml#a8a40d3489d8d1b60ee4760237c9c4d6d">new_s_pre</a>(T)</td></tr>
<tr class="separator:a8a40d3489d8d1b60ee4760237c9c4d6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80a06d1283ab262fef58bbc2cb93e847"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arduino__helpers_8hpp.xhtml#a80a06d1283ab262fef58bbc2cb93e847">new_s</a>(T)</td></tr>
<tr class="separator:a80a06d1283ab262fef58bbc2cb93e847"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec0d292bc8d3527e73560b6cc9aa3c8a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arduino__helpers_8hpp.xhtml#aec0d292bc8d3527e73560b6cc9aa3c8a">WAIT_AND_RETURN</a>(duration)</td></tr>
<tr class="memdesc:aec0d292bc8d3527e73560b6cc9aa3c8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current function for given duration.  <a href="arduino__helpers_8hpp.xhtml#aec0d292bc8d3527e73560b6cc9aa3c8a">More...</a><br /></td></tr>
<tr class="separator:aec0d292bc8d3527e73560b6cc9aa3c8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ac62a9082d92d4305cd25b063e44b268c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a> = decltype(millis())</td></tr>
<tr class="separator:ac62a9082d92d4305cd25b063e44b268c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a276390435f8f238655cb4b091e073f99"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arduino__helpers_8hpp.xhtml#a276390435f8f238655cb4b091e073f99">InterruptFunctionPointer</a> = void(*)(void)</td></tr>
<tr class="separator:a276390435f8f238655cb4b091e073f99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96949e0e0e31da23284790a4a52d9859"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arduino__helpers_8hpp.xhtml#a96949e0e0e31da23284790a4a52d9859">SerialCharacter</a> = decltype(std::declval&lt; Stream &gt;().read())</td></tr>
<tr class="separator:a96949e0e0e31da23284790a4a52d9859"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ac0d485fe2c7a4293a31164af952679b6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arduino__helpers_8hpp.xhtml#ac0d485fe2c7a4293a31164af952679b6">readFromSerial</a> (<a class="el" href="arduino__helpers_8hpp.xhtml#a96949e0e0e31da23284790a4a52d9859">SerialCharacter</a> *const buffer=nullptr, const std::size_t numberOfCharacters=0, Stream &amp;iostream=Serial)</td></tr>
<tr class="memdesc:ac0d485fe2c7a4293a31164af952679b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prompts the user to enter characters and ENTER.  <a href="arduino__helpers_8hpp.xhtml#ac0d485fe2c7a4293a31164af952679b6">More...</a><br /></td></tr>
<tr class="separator:ac0d485fe2c7a4293a31164af952679b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a80a06d1283ab262fef58bbc2cb93e847" name="a80a06d1283ab262fef58bbc2cb93e847"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80a06d1283ab262fef58bbc2cb93e847">&#9670;&nbsp;</a></span>new_s</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define new_s</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">T</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">  [&amp;](){ \</div>
<div class="line">    new_s_pre( T ) \</div>
<div class="line">    const <span class="keyword">auto</span> p = <span class="keyword">new</span> T; \</div>
<div class="line">    assert(p != <span class="keyword">nullptr</span>); \</div>
<div class="line">    return p; \</div>
<div class="line">  }();</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8a40d3489d8d1b60ee4760237c9c4d6d" name="a8a40d3489d8d1b60ee4760237c9c4d6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a40d3489d8d1b60ee4760237c9c4d6d">&#9670;&nbsp;</a></span>new_s_pre</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define new_s_pre</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">T</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">  { \</div>
<div class="line">    const <span class="keyword">auto</span> sizeAvailable = ESP.getMaxFreeBlockSize(); \</div>
<div class="line">    const <span class="keyword">auto</span> sizeNeeded = <span class="keyword">sizeof</span>(T); \</div>
<div class="line">    DEBUG_MSG_PROFILER(<span class="stringliteral">&quot;Try to allocate &#39;%lu&#39; bytes (&#39;%lu&#39; available).&quot;</span>, sizeNeeded, sizeAvailable); \</div>
<div class="line">    assert(sizeNeeded &lt;= sizeAvailable); \</div>
<div class="line">  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aec0d292bc8d3527e73560b6cc9aa3c8a" name="aec0d292bc8d3527e73560b6cc9aa3c8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec0d292bc8d3527e73560b6cc9aa3c8a">&#9670;&nbsp;</a></span>WAIT_AND_RETURN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define WAIT_AND_RETURN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">duration</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">{ \</div>
<div class="line">  static <span class="keywordtype">bool</span> waitStarted = <span class="keyword">false</span>; \</div>
<div class="line">  static <a class="code hl_typedef" href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a> startTime; \</div>
<div class="line">  if(!waitStarted) \</div>
<div class="line">  { \</div>
<div class="line">    startTime = millis(); \</div>
<div class="line">    waitStarted = <span class="keyword">true</span>; \</div>
<div class="line">  } \</div>
<div class="line"> \</div>
<div class="line">  if(millis() &gt; startTime + duration) \</div>
<div class="line">  { \</div>
<div class="line">    waitStarted = <span class="keyword">false</span>; \</div>
<div class="line">  } \</div>
<div class="line">  else \</div>
<div class="line">  { \</div>
<div class="line">    return; \</div>
<div class="line">  } \</div>
<div class="line">}</div>
<div class="ttc" id="aarduino__helpers_8hpp_xhtml_ac62a9082d92d4305cd25b063e44b268c"><div class="ttname"><a href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a></div><div class="ttdeci">decltype(millis()) Milliseconds</div><div class="ttdef"><b>Definition:</b> arduino_helpers.hpp:17</div></div>
</div><!-- fragment -->
<p>Returns the current function for given duration. </p>
<p >First time this is passed a time measurement is started. As long as the measured time is not greater than the given duration this does return the current function.</p>
<p >When the duration is exceeded, the timer is reset and no return is executed.</p>
<p >This macro can be used to implement a polling timer.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">duration</td><td>time in milliseconds </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a276390435f8f238655cb4b091e073f99" name="a276390435f8f238655cb4b091e073f99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a276390435f8f238655cb4b091e073f99">&#9670;&nbsp;</a></span>InterruptFunctionPointer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="arduino__helpers_8hpp.xhtml#a276390435f8f238655cb4b091e073f99">InterruptFunctionPointer</a> =  void (*)(void)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac62a9082d92d4305cd25b063e44b268c" name="ac62a9082d92d4305cd25b063e44b268c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac62a9082d92d4305cd25b063e44b268c">&#9670;&nbsp;</a></span>Milliseconds</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a> =  decltype(millis())</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a96949e0e0e31da23284790a4a52d9859" name="a96949e0e0e31da23284790a4a52d9859"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96949e0e0e31da23284790a4a52d9859">&#9670;&nbsp;</a></span>SerialCharacter</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="arduino__helpers_8hpp.xhtml#a96949e0e0e31da23284790a4a52d9859">SerialCharacter</a> =  decltype(std::declval&lt;Stream&gt;().read())</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ac0d485fe2c7a4293a31164af952679b6" name="ac0d485fe2c7a4293a31164af952679b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0d485fe2c7a4293a31164af952679b6">&#9670;&nbsp;</a></span>readFromSerial()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool readFromSerial </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arduino__helpers_8hpp.xhtml#a96949e0e0e31da23284790a4a52d9859">SerialCharacter</a> *const&#160;</td>
          <td class="paramname"><em>buffer</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::size_t&#160;</td>
          <td class="paramname"><em>numberOfCharacters</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Stream &amp;&#160;</td>
          <td class="paramname"><em>iostream</em> = <code>Serial</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prompts the user to enter characters and ENTER. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">buffer</td><td>to write the read characters to </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">numberOfCharacters</td><td>the number of characters to read, must be not greater than the size of the buffer </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">iostream</td><td>the stream to write and read from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true as long as more characters must be read </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Jul 25 2022 10:42:08 for Robot Control by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4
</small></address>
</body>
</html>
