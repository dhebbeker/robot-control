<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Robot Control: robot-control-src/src/utils/circular_buffer.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Robot Control
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11fcc4a44a9b64dfb7d33c3f0a78b9e9.xhtml">robot-control-src</a></li><li class="navelem"><a class="el" href="dir_2db2811a5034f27e35c4073bde1407d6.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_609ebbef7d9993506f20c6d1bfb81661.xhtml">utils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">circular_buffer.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="circular__buffer_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef UTILS_CIRCULAR_BUFFER_HPP_</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define UTILS_CIRCULAR_BUFFER_HPP_</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;<a class="code" href="types_8hpp.xhtml">types.hpp</a>&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;iterator&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">template</span>&lt;<span class="keyword">typename</span> _Tp, std::<span class="keywordtype">size_t</span> N_&gt;</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml">   10</a></span><span class="keyword">class </span><a class="code hl_class" href="classcircular__buffer.xhtml">circular_buffer</a></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>{</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a1203e390c73e6953091a87bb16ad25e9">   13</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer.xhtml#a1203e390c73e6953091a87bb16ad25e9">value_type</a> = <span class="keyword">typename</span> std::remove_const&lt;_Tp&gt;::type;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a04b5fdb24db3b6bcf0632b932afea704">   14</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer.xhtml#a04b5fdb24db3b6bcf0632b932afea704">reference</a> = <a class="code hl_typedef" href="classcircular__buffer.xhtml#a1203e390c73e6953091a87bb16ad25e9">value_type</a>&amp;;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a0d8bdf99a8e1458918936007e3f5d28c">   15</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer.xhtml#a0d8bdf99a8e1458918936007e3f5d28c">const_reference</a> = <span class="keyword">const</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a1203e390c73e6953091a87bb16ad25e9">value_type</a>&amp;;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">   16</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> = <a class="code hl_typedef" href="types_8hpp.xhtml#a57f22ed91762ba330777f02595c11977">IntegerMinType_t&lt;N_+1&gt;</a>;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> N = N_;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#ac6940bac49c08ce804b9d41a8389521d">   20</a></span>  <span class="keyword">static</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> <a class="code hl_function" href="classcircular__buffer.xhtml#ac6940bac49c08ce804b9d41a8389521d">next_index</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> current_index)</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  {</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a><span class="keyword">&gt;</span>((current_index + 1) % (N + 1));</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  }</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml">   26</a></span>  <span class="keyword">class </span><a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">_iterator</a></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  {</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#a4683180d14cf9d611ca984396e0b8c4b">   29</a></span>    <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer_1_1__iterator.xhtml#a4683180d14cf9d611ca984396e0b8c4b">iterator_category</a> = std::input_iterator_tag;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#a4163b557c82966218ac69e453cec8257">   30</a></span>    <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer_1_1__iterator.xhtml#a4163b557c82966218ac69e453cec8257">difference_type</a> = <span class="keyword">typename</span> std::make_signed&lt;size_type&gt;::type;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#a2268aa1449d5a65ff56e2b796dfe3152">   31</a></span>    <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer_1_1__iterator.xhtml#a2268aa1449d5a65ff56e2b796dfe3152">value_type</a> = T;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#aaf9d2234b874d51994b29fb21662c1db">   32</a></span>    <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer_1_1__iterator.xhtml#aaf9d2234b874d51994b29fb21662c1db">reference</a> = <span class="keyword">const</span> T&amp;;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#a33f182b5d67ebd13f3033cc17be69261">   33</a></span>    <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer_1_1__iterator.xhtml#a33f182b5d67ebd13f3033cc17be69261">pointer</a> = <span class="keyword">const</span> T*;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#aa9d5defc29fbe8c9893776356ae751c8">   34</a></span>    <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer_1_1__iterator.xhtml#aa9d5defc29fbe8c9893776356ae751c8">DataRef</a> = T(&amp;)[N];</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#ae9a2ed57f3e08e404393a9bc9f19b444">   35</a></span>    <span class="keyword">using </span><a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">_Self</a> = <a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">_iterator&lt;T&gt;</a>;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    <a class="code hl_typedef" href="classcircular__buffer_1_1__iterator.xhtml#aa9d5defc29fbe8c9893776356ae751c8">DataRef</a> data;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>    <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> index; <span class="comment">/* [0...N] */</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> distance_to_end;</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#af1be03735bc40e2921ab21bb9524d0dd">   41</a></span>    <a class="code hl_function" href="classcircular__buffer_1_1__iterator.xhtml#af1be03735bc40e2921ab21bb9524d0dd">_iterator</a>(<a class="code hl_typedef" href="classcircular__buffer_1_1__iterator.xhtml#aa9d5defc29fbe8c9893776356ae751c8">DataRef</a> _data, <span class="keyword">const</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> _index, <span class="keyword">const</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> _distance) :</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>        data(_data), index(_index), distance_to_end(_distance)</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    {</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    }</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#acbe36b751d50aa90afe4a5ded3b8c149">   47</a></span>    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code hl_friend" href="classcircular__buffer_1_1__iterator.xhtml#acbe36b751d50aa90afe4a5ded3b8c149">operator!=</a>(<span class="keyword">const</span> <a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">_iterator&lt;T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">_iterator&lt;T&gt;</a> &amp;rhs)</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    {</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>      <span class="keywordflow">return</span> (lhs.data != rhs.data) || (lhs.index != rhs.index) || (lhs.distance_to_end != rhs.distance_to_end);</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    }</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#a5d2050bf6886912e6a613a41837b658d">   51</a></span>    T <a class="code hl_function" href="classcircular__buffer_1_1__iterator.xhtml#a5d2050bf6886912e6a613a41837b658d">operator*</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>      <span class="keywordflow">return</span> data[index % N];</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    }</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="classcircular__buffer_1_1__iterator.xhtml#ab44c3d77f8d592c0168cca8fb6102186">   55</a></span>    <a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">_Self</a>&amp; <a class="code hl_function" href="classcircular__buffer_1_1__iterator.xhtml#ab44c3d77f8d592c0168cca8fb6102186">operator++</a>()</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    {</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>      index = <a class="code hl_function" href="classcircular__buffer.xhtml#ac6940bac49c08ce804b9d41a8389521d">next_index</a>(index % N);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>      --distance_to_end;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>      <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    }</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  };</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a12598d17bf9863ce2674b9234b57fb3b">   64</a></span>  <span class="keyword">using </span><a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">iterator</a> = <a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">_iterator&lt;value_type&gt;</a>;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#ae65959d747233a608963e3d8e2438851">   65</a></span>  <span class="keyword">using </span><a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">const_iterator</a> = <a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">_iterator&lt;const value_type&gt;</a>;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a54ea4e5244133695a2ec5ea6d58979f6">   66</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classcircular__buffer.xhtml#a54ea4e5244133695a2ec5ea6d58979f6">difference_type</a> = <span class="keyword">typename</span> std::iterator_traits&lt;iterator&gt;::difference_type;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <a class="code hl_typedef" href="classcircular__buffer.xhtml#a1203e390c73e6953091a87bb16ad25e9">value_type</a> values[N]</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  { };</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> next = 0;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> last = 0;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a1071ad065e54460528a5925565bad7dd">   73</a></span>  <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> <a class="code hl_function" href="classcircular__buffer.xhtml#a1071ad065e54460528a5925565bad7dd">size</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="classcircular__buffer.xhtml#a0f05e234b9646b910124a0e7aa916880">empty</a>())</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    {</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    }</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (next == last)</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    {</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>      <span class="keywordflow">return</span> <a class="code hl_function" href="classcircular__buffer.xhtml#ae19fca08bb022c07c695c560c28bddda">max_size</a>();</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    }</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    {</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a><span class="keyword">&gt;</span>((next - last + N + 1) % (N + 1));</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    }</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#ae19fca08bb022c07c695c560c28bddda">   88</a></span>  <span class="keyword">constexpr</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> <a class="code hl_function" href="classcircular__buffer.xhtml#ae19fca08bb022c07c695c560c28bddda">max_size</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <span class="keywordflow">return</span> N;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  }</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a0f05e234b9646b910124a0e7aa916880">   92</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="classcircular__buffer.xhtml#a0f05e234b9646b910124a0e7aa916880">empty</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    <span class="keywordflow">return</span> next == 0;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#af151eafe5ba6b36a66e4bc2af60cb9e0">  105</a></span>  <a class="code hl_typedef" href="classcircular__buffer.xhtml#a1203e390c73e6953091a87bb16ad25e9">value_type</a> <a class="code hl_function" href="classcircular__buffer.xhtml#af151eafe5ba6b36a66e4bc2af60cb9e0">at</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> index)<span class="keyword"> const</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="keywordflow">return</span> values[(last + index) % N];</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  }</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a3f863126c418b26760c5c7a5f8343886">  110</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="classcircular__buffer.xhtml#a3f863126c418b26760c5c7a5f8343886">push_back</a>(<a class="code hl_typedef" href="classcircular__buffer.xhtml#a0d8bdf99a8e1458918936007e3f5d28c">const_reference</a> value)</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  {</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    <span class="keyword">const</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> current = next % N;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="keyword">const</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">size_type</a> oldLast = last % N;</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    values[current] = value;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="keywordflow">if</span> (!<a class="code hl_function" href="classcircular__buffer.xhtml#a0f05e234b9646b910124a0e7aa916880">empty</a>() &amp;&amp; current == oldLast)</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    {</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>      last = <a class="code hl_function" href="classcircular__buffer.xhtml#ac6940bac49c08ce804b9d41a8389521d">next_index</a>(oldLast);</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    }</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    next = <a class="code hl_function" href="classcircular__buffer.xhtml#ac6940bac49c08ce804b9d41a8389521d">next_index</a>(current);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  }</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#af09c68a7002f9ed72408e8c92701a4b9">  122</a></span>  <a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">const_iterator</a> <a class="code hl_function" href="classcircular__buffer.xhtml#af09c68a7002f9ed72408e8c92701a4b9">begin</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    <span class="keywordflow">return</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#ae65959d747233a608963e3d8e2438851">const_iterator</a>(values, last, <a class="code hl_function" href="classcircular__buffer.xhtml#a1071ad065e54460528a5925565bad7dd">size</a>());</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  }</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#aaaa26ecaf9c4e6eeba55ea20609c89f0">  127</a></span>  <a class="code hl_class" href="classcircular__buffer_1_1__iterator.xhtml">const_iterator</a> <a class="code hl_function" href="classcircular__buffer.xhtml#aaaa26ecaf9c4e6eeba55ea20609c89f0">end</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    <span class="keywordflow">return</span> <a class="code hl_typedef" href="classcircular__buffer.xhtml#ae65959d747233a608963e3d8e2438851">const_iterator</a>(values, next, 0);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  }</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="classcircular__buffer.xhtml#a7f5e60ea16a8ac12f95dda2d4c5e8a36">  132</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="classcircular__buffer.xhtml#a7f5e60ea16a8ac12f95dda2d4c5e8a36">clear</a>()</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  {</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    next = 0;</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>    last = 0;</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  }</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>};</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="preprocessor">#endif </span><span class="comment">/* UTILS_CIRCULAR_BUFFER_HPP_ */</span><span class="preprocessor"></span></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml">circular_buffer::_iterator</a></div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:27</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_a2268aa1449d5a65ff56e2b796dfe3152"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#a2268aa1449d5a65ff56e2b796dfe3152">circular_buffer::_iterator::value_type</a></div><div class="ttdeci">T value_type</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:31</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_a33f182b5d67ebd13f3033cc17be69261"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#a33f182b5d67ebd13f3033cc17be69261">circular_buffer::_iterator::pointer</a></div><div class="ttdeci">const T * pointer</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:33</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_a4163b557c82966218ac69e453cec8257"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#a4163b557c82966218ac69e453cec8257">circular_buffer::_iterator::difference_type</a></div><div class="ttdeci">typename std::make_signed&lt; size_type &gt;::type difference_type</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:30</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_a4683180d14cf9d611ca984396e0b8c4b"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#a4683180d14cf9d611ca984396e0b8c4b">circular_buffer::_iterator::iterator_category</a></div><div class="ttdeci">std::input_iterator_tag iterator_category</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:29</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_a5d2050bf6886912e6a613a41837b658d"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#a5d2050bf6886912e6a613a41837b658d">circular_buffer::_iterator::operator*</a></div><div class="ttdeci">T operator*() const</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:51</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_aa9d5defc29fbe8c9893776356ae751c8"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#aa9d5defc29fbe8c9893776356ae751c8">circular_buffer::_iterator::DataRef</a></div><div class="ttdeci">T(&amp;)[N] DataRef</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:34</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_aaf9d2234b874d51994b29fb21662c1db"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#aaf9d2234b874d51994b29fb21662c1db">circular_buffer::_iterator::reference</a></div><div class="ttdeci">const T &amp; reference</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:32</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_ab44c3d77f8d592c0168cca8fb6102186"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#ab44c3d77f8d592c0168cca8fb6102186">circular_buffer::_iterator::operator++</a></div><div class="ttdeci">_Self &amp; operator++()</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:55</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_acbe36b751d50aa90afe4a5ded3b8c149"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#acbe36b751d50aa90afe4a5ded3b8c149">circular_buffer::_iterator::operator!=</a></div><div class="ttdeci">friend bool operator!=(const _iterator&lt; T &gt; &amp;lhs, const _iterator&lt; T &gt; &amp;rhs)</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:47</div></div>
<div class="ttc" id="aclasscircular__buffer_1_1__iterator_xhtml_af1be03735bc40e2921ab21bb9524d0dd"><div class="ttname"><a href="classcircular__buffer_1_1__iterator.xhtml#af1be03735bc40e2921ab21bb9524d0dd">circular_buffer::_iterator::_iterator</a></div><div class="ttdeci">_iterator(DataRef _data, const size_type _index, const size_type _distance)</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:41</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml"><div class="ttname"><a href="classcircular__buffer.xhtml">circular_buffer</a></div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:11</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_a04b5fdb24db3b6bcf0632b932afea704"><div class="ttname"><a href="classcircular__buffer.xhtml#a04b5fdb24db3b6bcf0632b932afea704">circular_buffer::reference</a></div><div class="ttdeci">value_type &amp; reference</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:14</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_a0d8bdf99a8e1458918936007e3f5d28c"><div class="ttname"><a href="classcircular__buffer.xhtml#a0d8bdf99a8e1458918936007e3f5d28c">circular_buffer::const_reference</a></div><div class="ttdeci">const value_type &amp; const_reference</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:15</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_a0f05e234b9646b910124a0e7aa916880"><div class="ttname"><a href="classcircular__buffer.xhtml#a0f05e234b9646b910124a0e7aa916880">circular_buffer::empty</a></div><div class="ttdeci">bool empty() const</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:92</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_a1071ad065e54460528a5925565bad7dd"><div class="ttname"><a href="classcircular__buffer.xhtml#a1071ad065e54460528a5925565bad7dd">circular_buffer::size</a></div><div class="ttdeci">size_type size() const</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:73</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_a1203e390c73e6953091a87bb16ad25e9"><div class="ttname"><a href="classcircular__buffer.xhtml#a1203e390c73e6953091a87bb16ad25e9">circular_buffer::value_type</a></div><div class="ttdeci">typename std::remove_const&lt; _Tp &gt;::type value_type</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:13</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_a3f863126c418b26760c5c7a5f8343886"><div class="ttname"><a href="classcircular__buffer.xhtml#a3f863126c418b26760c5c7a5f8343886">circular_buffer::push_back</a></div><div class="ttdeci">void push_back(const_reference value)</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:110</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_a54ea4e5244133695a2ec5ea6d58979f6"><div class="ttname"><a href="classcircular__buffer.xhtml#a54ea4e5244133695a2ec5ea6d58979f6">circular_buffer::difference_type</a></div><div class="ttdeci">typename std::iterator_traits&lt; iterator &gt;::difference_type difference_type</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:66</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_a7f5e60ea16a8ac12f95dda2d4c5e8a36"><div class="ttname"><a href="classcircular__buffer.xhtml#a7f5e60ea16a8ac12f95dda2d4c5e8a36">circular_buffer::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:132</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_a7f5e7aba934deaf5c611ea6a624329c4"><div class="ttname"><a href="classcircular__buffer.xhtml#a7f5e7aba934deaf5c611ea6a624329c4">circular_buffer::size_type</a></div><div class="ttdeci">IntegerMinType_t&lt; N_+1 &gt; size_type</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:16</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_aaaa26ecaf9c4e6eeba55ea20609c89f0"><div class="ttname"><a href="classcircular__buffer.xhtml#aaaa26ecaf9c4e6eeba55ea20609c89f0">circular_buffer::end</a></div><div class="ttdeci">const_iterator end() const</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:127</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_ac6940bac49c08ce804b9d41a8389521d"><div class="ttname"><a href="classcircular__buffer.xhtml#ac6940bac49c08ce804b9d41a8389521d">circular_buffer::next_index</a></div><div class="ttdeci">static size_type next_index(const size_type current_index)</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:20</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_ae19fca08bb022c07c695c560c28bddda"><div class="ttname"><a href="classcircular__buffer.xhtml#ae19fca08bb022c07c695c560c28bddda">circular_buffer::max_size</a></div><div class="ttdeci">constexpr size_type max_size() const</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:88</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_ae65959d747233a608963e3d8e2438851"><div class="ttname"><a href="classcircular__buffer.xhtml#ae65959d747233a608963e3d8e2438851">circular_buffer::const_iterator</a></div><div class="ttdeci">_iterator&lt; const value_type &gt; const_iterator</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:65</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_af09c68a7002f9ed72408e8c92701a4b9"><div class="ttname"><a href="classcircular__buffer.xhtml#af09c68a7002f9ed72408e8c92701a4b9">circular_buffer::begin</a></div><div class="ttdeci">const_iterator begin() const</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:122</div></div>
<div class="ttc" id="aclasscircular__buffer_xhtml_af151eafe5ba6b36a66e4bc2af60cb9e0"><div class="ttname"><a href="classcircular__buffer.xhtml#af151eafe5ba6b36a66e4bc2af60cb9e0">circular_buffer::at</a></div><div class="ttdeci">value_type at(const size_type index) const</div><div class="ttdoc">Returns value at index.</div><div class="ttdef"><b>Definition:</b> circular_buffer.hpp:105</div></div>
<div class="ttc" id="atypes_8hpp_xhtml"><div class="ttname"><a href="types_8hpp.xhtml">types.hpp</a></div></div>
<div class="ttc" id="atypes_8hpp_xhtml_a57f22ed91762ba330777f02595c11977"><div class="ttname"><a href="types_8hpp.xhtml#a57f22ed91762ba330777f02595c11977">IntegerMinType_t</a></div><div class="ttdeci">typename IntegerMinType&lt; V &gt;::type IntegerMinType_t</div><div class="ttdef"><b>Definition:</b> types.hpp:28</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Jul 25 2022 10:42:08 for Robot Control by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4
</small></address>
</body>
</html>
