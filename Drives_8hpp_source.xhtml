<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Robot Control: robot-control-src/src/application/Drives.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Robot Control
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11fcc4a44a9b64dfb7d33c3f0a78b9e9.xhtml">robot-control-src</a></li><li class="navelem"><a class="el" href="dir_2db2811a5034f27e35c4073bde1407d6.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_6eeebcd6d5bd838603faba3277933c1b.xhtml">application</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">Drives.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="Drives_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &quot;../utils/numbers.hpp&quot;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;../utils/arduino_helpers.hpp&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &quot;../middleware/EnvironmentRecord.hpp&quot;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;c_types.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;cstdint&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Arduino.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacedrives.xhtml">drives</a></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>{</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno"><a class="line" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">   14</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">Counter</a> = std::uint16_t;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">   15</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">Amplitude</a> = std::uint16_t;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="namespacedrives.xhtml#aae2029fb08266d6a5d567669494bd1e3">   16</a></span><span class="keyword">constexpr</span> <a class="code hl_typedef" href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">Amplitude</a> <a class="code hl_variable" href="namespacedrives.xhtml#aae2029fb08266d6a5d567669494bd1e3">maxAmplitude</a> = 1023;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="namespacedrives.xhtml#a9b8b1953b75737438f8a70891ff1e02c">   17</a></span><span class="keyword">constexpr</span> <a class="code hl_typedef" href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">Amplitude</a> <a class="code hl_variable" href="namespacedrives.xhtml#a9b8b1953b75737438f8a70891ff1e02c">cruiseSpeed</a> = <a class="code hl_variable" href="namespacedrives.xhtml#aae2029fb08266d6a5d567669494bd1e3">maxAmplitude</a> / 2;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="namespacedrives.xhtml#aaf81ed0eff4d976648423ca4c8746afc">   22</a></span><span class="keyword">constexpr</span> <span class="keywordtype">float</span> <a class="code hl_variable" href="namespacedrives.xhtml#aaf81ed0eff4d976648423ca4c8746afc">stepsPerDeg</a> = 200. / (12. * 360. + 5.);</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="namespacedrives.xhtml#a4306ddb4aa5409c9f8fec8994d3144b9">   29</a></span><span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacedrives.xhtml#a4306ddb4aa5409c9f8fec8994d3144b9">maxVelocity</a> = 220; </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="namespacedrives.xhtml#a13d7f13509e7da95021bf61e2a647c56">   36</a></span><span class="keyword">constexpr</span> <span class="keywordtype">float</span> <a class="code hl_variable" href="namespacedrives.xhtml#a13d7f13509e7da95021bf61e2a647c56">odoIntervalLength</a> = (6.0 / 25.0) * 50 * <a class="code hl_variable" href="namespacenumbers.xhtml#abd6cae49912be303d9827e9288bd4fd6">numbers::pi</a>; </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="namespacedrives.xhtml#aa2b5d01bb6e3df4a4c22e19701a3b618">   38</a></span><span class="keyword">constexpr</span> <a class="code hl_typedef" href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a> <a class="code hl_variable" href="namespacedrives.xhtml#aa2b5d01bb6e3df4a4c22e19701a3b618">odoMinIntervalDuration</a> = (<a class="code hl_variable" href="namespacedrives.xhtml#a13d7f13509e7da95021bf61e2a647c56">odoIntervalLength</a> * 1000.0) / (<a class="code hl_variable" href="namespacedrives.xhtml#a4306ddb4aa5409c9f8fec8994d3144b9">maxVelocity</a>*2.0);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="keyword">static_assert</span>(<a class="code hl_variable" href="namespacedrives.xhtml#aa2b5d01bb6e3df4a4c22e19701a3b618">odoMinIntervalDuration</a> &gt; 38, <span class="stringliteral">&quot;threshold must be greater than longest pulse of photoelectric sensor (measured at slowest speed)&quot;</span>);</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="keyword">static_assert</span>(<a class="code hl_variable" href="namespacedrives.xhtml#aa2b5d01bb6e3df4a4c22e19701a3b618">odoMinIntervalDuration</a> &lt; 142, <span class="stringliteral">&quot;threshold must be smaller than shortest odometry interval between pulses (measured at highest speed)&quot;</span>);</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno"><a class="line" href="namespacedrives.xhtml#a2d6416368900532b143a0bb8dd3e5378">   42</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_typedef" href="EnvironmentRecord_8hpp.xhtml#a3174d7717e273f4886b9ef5773d2309a">Distance</a> <a class="code hl_function" href="namespacedrives.xhtml#a2d6416368900532b143a0bb8dd3e5378">roundDownToOdoIntervalMultiple</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="EnvironmentRecord_8hpp.xhtml#a3174d7717e273f4886b9ef5773d2309a">Distance</a> d)</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>{</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="namespacedrives.xhtml#a13d7f13509e7da95021bf61e2a647c56">odoIntervalLength</a> * <span class="keyword">static_cast&lt;</span><a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">Counter</a><span class="keyword">&gt;</span>(d / <a class="code hl_variable" href="namespacedrives.xhtml#a13d7f13509e7da95021bf61e2a647c56">odoIntervalLength</a>);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>}</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="keyword">template</span>&lt;<span class="keyword">typename</span> MOTORCONTROL, MOTORCONTROL&amp; motorControlpin, <span class="keyword">typename</span> DIRECTIONPIN, DIRECTIONPIN&amp; directionPin, <span class="keyword">typename</span> ODOPIN, ODOPIN&amp; odoPin&gt;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="classdrives_1_1Drive.xhtml">   48</a></span><span class="keyword">class </span><a class="code hl_class" href="classdrives_1_1Drive.xhtml">Drive</a></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>{</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="classdrives_1_1Drive.xhtml#a506b347b9b86a8fb4300bad2b62272cc">   51</a></span>    <span class="keyword">static</span> <a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">Counter</a> <span class="keyword">volatile</span> <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a506b347b9b86a8fb4300bad2b62272cc">counter</a>;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="classdrives_1_1Drive.xhtml#a631f0aba9eed4b3d5942bf75190843dc">   52</a></span>    <span class="keyword">static</span> <a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">Counter</a> <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a631f0aba9eed4b3d5942bf75190843dc">target</a>;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="classdrives_1_1Drive.xhtml#a4bdc0a6a6c56602af588776ff41ca251">   53</a></span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a4bdc0a6a6c56602af588776ff41ca251">isIdle</a>;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="classdrives_1_1Drive.xhtml#a6a7b489eddc82d8f153c4e2f94e7106f">   54</a></span>    <span class="keyword">static</span> <a class="code hl_typedef" href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a> <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a6a7b489eddc82d8f153c4e2f94e7106f">lastDuration</a>;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="classdrives_1_1Drive.xhtml#afedcc2b6c5b80756286f92cd65a4aa26">   56</a></span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classdrives_1_1Drive.xhtml#afedcc2b6c5b80756286f92cd65a4aa26">init</a>()</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    {</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>        <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a631f0aba9eed4b3d5942bf75190843dc">target</a> = <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a506b347b9b86a8fb4300bad2b62272cc">counter</a> = 0;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>        <a class="code hl_function" href="GpioInterface_8cpp.xhtml#a411111494f168928968370c675943a4e">pinMode</a>(odoPin, INPUT);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>        <a class="code hl_function" href="GpioPin_8hpp.xhtml#a5441970081254d8f00ace3ad774b3fee">attachInterrupt</a>(<a class="code hl_function" href="GpioPin_8hpp.xhtml#a1df1ff5b216268e3ae64f753f38a7b54">digitalPinToInterrupt</a>(odoPin), <a class="code hl_function" href="classdrives_1_1Drive.xhtml#a771fa48661059238d7d998d6964ffe32">evaluateInterval</a>, RISING);</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>        <a class="code hl_function" href="GpioPin_8hpp.xhtml#affab782c5ee6662dd2e5d0c48aae4777">analogWrite</a>(motorControlpin, 0);</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>        <a class="code hl_function" href="GpioInterface_8cpp.xhtml#a411111494f168928968370c675943a4e">pinMode</a>(directionPin, OUTPUT);</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    }</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="classdrives_1_1Drive.xhtml#a771fa48661059238d7d998d6964ffe32">   73</a></span>  IRAM_ATTR <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classdrives_1_1Drive.xhtml#a771fa48661059238d7d998d6964ffe32">evaluateInterval</a>()</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  {</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a4bdc0a6a6c56602af588776ff41ca251">isIdle</a>)</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    {</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      <span class="keyword">const</span> <a class="code hl_typedef" href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a> now = millis();</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>      <span class="keyword">static</span> <a class="code hl_typedef" href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a> riseTime = now;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>      <span class="keywordflow">if</span> (now - riseTime &gt; <a class="code hl_variable" href="namespacedrives.xhtml#aa2b5d01bb6e3df4a4c22e19701a3b618">odoMinIntervalDuration</a>)</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>      {</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>        <span class="keywordflow">if</span> (++<a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a506b347b9b86a8fb4300bad2b62272cc">counter</a> &gt;= <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a631f0aba9eed4b3d5942bf75190843dc">target</a>)</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>        {</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>          <a class="code hl_function" href="classdrives_1_1Drive.xhtml#ae1ebb272d5d9871baa2c5ed7ed7cfcd1">stop</a>();</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>          <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a6a7b489eddc82d8f153c4e2f94e7106f">lastDuration</a> = now - <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a6a7b489eddc82d8f153c4e2f94e7106f">lastDuration</a>;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>        }</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>        riseTime = now;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>      }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    }</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  }</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="classdrives_1_1Drive.xhtml#ae1ebb272d5d9871baa2c5ed7ed7cfcd1">   91</a></span>    IRAM_ATTR <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classdrives_1_1Drive.xhtml#ae1ebb272d5d9871baa2c5ed7ed7cfcd1">stop</a>()</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    {</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>        <a class="code hl_function" href="GpioPin_8hpp.xhtml#affab782c5ee6662dd2e5d0c48aae4777">analogWrite</a>(motorControlpin, 0);</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>        <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a4bdc0a6a6c56602af588776ff41ca251">isIdle</a> = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="classdrives_1_1Drive.xhtml#a3289dcc06975c1419dee2ee46eb8e8b8">   97</a></span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classdrives_1_1Drive.xhtml#a3289dcc06975c1419dee2ee46eb8e8b8">drive</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">Counter</a> distance, <span class="keyword">const</span> <a class="code hl_typedef" href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">Amplitude</a> amplitude, <span class="keyword">const</span> <span class="keywordtype">bool</span> backwards)</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>    {</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>        <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a506b347b9b86a8fb4300bad2b62272cc">counter</a> = 0;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>        <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a631f0aba9eed4b3d5942bf75190843dc">target</a> = distance;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>        <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a4bdc0a6a6c56602af588776ff41ca251">isIdle</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>        <a class="code hl_variable" href="classdrives_1_1Drive.xhtml#a6a7b489eddc82d8f153c4e2f94e7106f">lastDuration</a> = millis();</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>        <a class="code hl_function" href="GpioInterface_8cpp.xhtml#a0a56584d033e38784250852460b56372">digitalWrite</a>(directionPin, !backwards ? LOW : HIGH);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>        <a class="code hl_function" href="GpioPin_8hpp.xhtml#affab782c5ee6662dd2e5d0c48aae4777">analogWrite</a>(motorControlpin, std::min(<a class="code hl_variable" href="namespacedrives.xhtml#aae2029fb08266d6a5d567669494bd1e3">maxAmplitude</a>, amplitude));</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    }</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>};</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="keywordtype">void</span> <a class="code hl_function" href="namespacedrives.xhtml#abe9c4c70d0f4db4ed4dcbb8d40ced9d5">initDrives</a>();</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="keywordtype">void</span> <a class="code hl_function" href="namespacedrives.xhtml#a7b773dd5e49167b0aa61b673cf3772e3">rotateCounter</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">Counter</a> deg, <span class="keyword">const</span> <a class="code hl_typedef" href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">Amplitude</a> amplitude, <span class="keywordtype">bool</span> <span class="keyword">const</span> clockwise);</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="keywordtype">void</span> <a class="code hl_function" href="namespacedrives.xhtml#a24f745263d30a64444076e93f20c0d40">rotate</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> deg, <span class="keyword">const</span> <a class="code hl_typedef" href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">Amplitude</a> amplitude);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span><span class="keywordtype">void</span> <a class="code hl_function" href="namespacedrives.xhtml#a485bc5ca942736786e691ad2e6183726">driveCounter</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">Counter</a> distance, <span class="keyword">const</span> <a class="code hl_typedef" href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">Amplitude</a> amplitude, <span class="keyword">const</span> <span class="keywordtype">bool</span> backwards);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="keywordtype">void</span> <a class="code hl_function" href="namespacedrives.xhtml#a62b6bc3f6af7476694180f1960ba2f14">drive</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> distance, <span class="keyword">const</span> <a class="code hl_typedef" href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">Amplitude</a> amplitude, <span class="keyword">const</span> <span class="keywordtype">bool</span> backwards);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><a class="code hl_struct" href="structPosition.xhtml">Position</a> <a class="code hl_function" href="namespacedrives.xhtml#a5291378b838fa6faf0143aac5619cd25">flushCurrentPosition</a>();</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span><span class="keywordtype">void</span> <a class="code hl_function" href="namespacedrives.xhtml#ae4919e6f616adbdf7ddb9469012cc68a">stopDrives</a>();</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span><span class="keywordtype">bool</span> <a class="code hl_function" href="namespacedrives.xhtml#a3a0afcf776ef59b88676a1276a0635b8">isIdle</a>();</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span><span class="keywordtype">void</span> <a class="code hl_function" href="namespacedrives.xhtml#a64fc787da95a09c7fdcf47c49862689a">calibrate</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> testDistance = 500);</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>}</div>
<div class="ttc" id="aEnvironmentRecord_8hpp_xhtml_a3174d7717e273f4886b9ef5773d2309a"><div class="ttname"><a href="EnvironmentRecord_8hpp.xhtml#a3174d7717e273f4886b9ef5773d2309a">Distance</a></div><div class="ttdeci">std::int16_t Distance</div><div class="ttdoc">in [mm]</div><div class="ttdef"><b>Definition:</b> EnvironmentRecord.hpp:7</div></div>
<div class="ttc" id="aGpioInterface_8cpp_xhtml_a0a56584d033e38784250852460b56372"><div class="ttname"><a href="GpioInterface_8cpp.xhtml#a0a56584d033e38784250852460b56372">digitalWrite</a></div><div class="ttdeci">void digitalWrite(GpioInterface &amp;gpio, const std::uint8_t value)</div><div class="ttdoc">Sets output value of the pin.</div><div class="ttdef"><b>Definition:</b> GpioInterface.cpp:3</div></div>
<div class="ttc" id="aGpioInterface_8cpp_xhtml_a411111494f168928968370c675943a4e"><div class="ttname"><a href="GpioInterface_8cpp.xhtml#a411111494f168928968370c675943a4e">pinMode</a></div><div class="ttdeci">void pinMode(GpioInterface &amp;gpio, const std::uint8_t mode)</div><div class="ttdoc">Configures the pin to be either input or output.</div><div class="ttdef"><b>Definition:</b> GpioInterface.cpp:13</div></div>
<div class="ttc" id="aGpioPin_8hpp_xhtml_a1df1ff5b216268e3ae64f753f38a7b54"><div class="ttname"><a href="GpioPin_8hpp.xhtml#a1df1ff5b216268e3ae64f753f38a7b54">digitalPinToInterrupt</a></div><div class="ttdeci">int constexpr digitalPinToInterrupt(const GpioPin&lt; PIN &gt; &amp;gpio)</div><div class="ttdoc">Getter for the interrupt number for a digital input pin.</div><div class="ttdef"><b>Definition:</b> GpioPin.hpp:98</div></div>
<div class="ttc" id="aGpioPin_8hpp_xhtml_a5441970081254d8f00ace3ad774b3fee"><div class="ttname"><a href="GpioPin_8hpp.xhtml#a5441970081254d8f00ace3ad774b3fee">attachInterrupt</a></div><div class="ttdeci">void attachInterrupt(const GpioPin&lt; PIN &gt; &amp;gpio, const InterruptFunctionPointer interruptServiceRoutine, const int mode)</div><div class="ttdoc">Attach function to be called on external interrupt.</div><div class="ttdef"><b>Definition:</b> GpioPin.hpp:112</div></div>
<div class="ttc" id="aGpioPin_8hpp_xhtml_affab782c5ee6662dd2e5d0c48aae4777"><div class="ttname"><a href="GpioPin_8hpp.xhtml#affab782c5ee6662dd2e5d0c48aae4777">analogWrite</a></div><div class="ttdeci">void analogWrite(const GpioPin&lt; PIN &gt; &amp;gpio, const int dutyCycle)</div><div class="ttdoc">Sets PWM duty cycle to pin.</div><div class="ttdef"><b>Definition:</b> GpioPin.hpp:124</div></div>
<div class="ttc" id="aarduino__helpers_8hpp_xhtml_ac62a9082d92d4305cd25b063e44b268c"><div class="ttname"><a href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a></div><div class="ttdeci">decltype(millis()) Milliseconds</div><div class="ttdef"><b>Definition:</b> arduino_helpers.hpp:17</div></div>
<div class="ttc" id="aclassdrives_1_1Drive_xhtml"><div class="ttname"><a href="classdrives_1_1Drive.xhtml">drives::Drive</a></div><div class="ttdef"><b>Definition:</b> Drives.hpp:49</div></div>
<div class="ttc" id="aclassdrives_1_1Drive_xhtml_a3289dcc06975c1419dee2ee46eb8e8b8"><div class="ttname"><a href="classdrives_1_1Drive.xhtml#a3289dcc06975c1419dee2ee46eb8e8b8">drives::Drive::drive</a></div><div class="ttdeci">static void drive(const Counter distance, const Amplitude amplitude, const bool backwards)</div><div class="ttdef"><b>Definition:</b> Drives.hpp:97</div></div>
<div class="ttc" id="aclassdrives_1_1Drive_xhtml_a4bdc0a6a6c56602af588776ff41ca251"><div class="ttname"><a href="classdrives_1_1Drive.xhtml#a4bdc0a6a6c56602af588776ff41ca251">drives::Drive::isIdle</a></div><div class="ttdeci">static bool isIdle</div><div class="ttdef"><b>Definition:</b> Drives.hpp:53</div></div>
<div class="ttc" id="aclassdrives_1_1Drive_xhtml_a506b347b9b86a8fb4300bad2b62272cc"><div class="ttname"><a href="classdrives_1_1Drive.xhtml#a506b347b9b86a8fb4300bad2b62272cc">drives::Drive::counter</a></div><div class="ttdeci">static Counter volatile counter</div><div class="ttdef"><b>Definition:</b> Drives.hpp:51</div></div>
<div class="ttc" id="aclassdrives_1_1Drive_xhtml_a631f0aba9eed4b3d5942bf75190843dc"><div class="ttname"><a href="classdrives_1_1Drive.xhtml#a631f0aba9eed4b3d5942bf75190843dc">drives::Drive::target</a></div><div class="ttdeci">static Counter target</div><div class="ttdef"><b>Definition:</b> Drives.hpp:52</div></div>
<div class="ttc" id="aclassdrives_1_1Drive_xhtml_a6a7b489eddc82d8f153c4e2f94e7106f"><div class="ttname"><a href="classdrives_1_1Drive.xhtml#a6a7b489eddc82d8f153c4e2f94e7106f">drives::Drive::lastDuration</a></div><div class="ttdeci">static Milliseconds lastDuration</div><div class="ttdef"><b>Definition:</b> Drives.hpp:54</div></div>
<div class="ttc" id="aclassdrives_1_1Drive_xhtml_a771fa48661059238d7d998d6964ffe32"><div class="ttname"><a href="classdrives_1_1Drive.xhtml#a771fa48661059238d7d998d6964ffe32">drives::Drive::evaluateInterval</a></div><div class="ttdeci">static IRAM_ATTR void evaluateInterval()</div><div class="ttdoc">Evaluates the event of a rising edge.</div><div class="ttdef"><b>Definition:</b> Drives.hpp:73</div></div>
<div class="ttc" id="aclassdrives_1_1Drive_xhtml_ae1ebb272d5d9871baa2c5ed7ed7cfcd1"><div class="ttname"><a href="classdrives_1_1Drive.xhtml#ae1ebb272d5d9871baa2c5ed7ed7cfcd1">drives::Drive::stop</a></div><div class="ttdeci">static IRAM_ATTR void stop()</div><div class="ttdef"><b>Definition:</b> Drives.hpp:91</div></div>
<div class="ttc" id="aclassdrives_1_1Drive_xhtml_afedcc2b6c5b80756286f92cd65a4aa26"><div class="ttname"><a href="classdrives_1_1Drive.xhtml#afedcc2b6c5b80756286f92cd65a4aa26">drives::Drive::init</a></div><div class="ttdeci">static void init()</div><div class="ttdef"><b>Definition:</b> Drives.hpp:56</div></div>
<div class="ttc" id="anamespacedrives_xhtml"><div class="ttname"><a href="namespacedrives.xhtml">drives</a></div><div class="ttdef"><b>Definition:</b> Drives.cpp:17</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a13d7f13509e7da95021bf61e2a647c56"><div class="ttname"><a href="namespacedrives.xhtml#a13d7f13509e7da95021bf61e2a647c56">drives::odoIntervalLength</a></div><div class="ttdeci">constexpr float odoIntervalLength</div><div class="ttdoc">distance of one outer wheel turn U = d*pi diameter of outer wheel d = 50 mm fraction of one odometry ...</div><div class="ttdef"><b>Definition:</b> Drives.hpp:36</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a24f745263d30a64444076e93f20c0d40"><div class="ttname"><a href="namespacedrives.xhtml#a24f745263d30a64444076e93f20c0d40">drives::rotate</a></div><div class="ttdeci">void rotate(const float deg, const Amplitude amplitude)</div><div class="ttdef"><b>Definition:</b> Drives.cpp:186</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a2d6416368900532b143a0bb8dd3e5378"><div class="ttname"><a href="namespacedrives.xhtml#a2d6416368900532b143a0bb8dd3e5378">drives::roundDownToOdoIntervalMultiple</a></div><div class="ttdeci">constexpr Distance roundDownToOdoIntervalMultiple(const Distance d)</div><div class="ttdef"><b>Definition:</b> Drives.hpp:42</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a3a0afcf776ef59b88676a1276a0635b8"><div class="ttname"><a href="namespacedrives.xhtml#a3a0afcf776ef59b88676a1276a0635b8">drives::isIdle</a></div><div class="ttdeci">bool isIdle()</div><div class="ttdef"><b>Definition:</b> Drives.cpp:237</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a4306ddb4aa5409c9f8fec8994d3144b9"><div class="ttname"><a href="namespacedrives.xhtml#a4306ddb4aa5409c9f8fec8994d3144b9">drives::maxVelocity</a></div><div class="ttdeci">constexpr auto maxVelocity</div><div class="ttdoc">Maximum robot velocity.</div><div class="ttdef"><b>Definition:</b> Drives.hpp:29</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a485bc5ca942736786e691ad2e6183726"><div class="ttname"><a href="namespacedrives.xhtml#a485bc5ca942736786e691ad2e6183726">drives::driveCounter</a></div><div class="ttdeci">void driveCounter(const Counter steps, const Amplitude amplitude, const bool backwards)</div><div class="ttdef"><b>Definition:</b> Drives.cpp:178</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a5291378b838fa6faf0143aac5619cd25"><div class="ttname"><a href="namespacedrives.xhtml#a5291378b838fa6faf0143aac5619cd25">drives::flushCurrentPosition</a></div><div class="ttdeci">Position flushCurrentPosition()</div><div class="ttdef"><b>Definition:</b> Drives.cpp:202</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a589c47ef9d6f21c620159d82e4d92fac"><div class="ttname"><a href="namespacedrives.xhtml#a589c47ef9d6f21c620159d82e4d92fac">drives::Amplitude</a></div><div class="ttdeci">std::uint16_t Amplitude</div><div class="ttdef"><b>Definition:</b> Drives.hpp:15</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a62b6bc3f6af7476694180f1960ba2f14"><div class="ttname"><a href="namespacedrives.xhtml#a62b6bc3f6af7476694180f1960ba2f14">drives::drive</a></div><div class="ttdeci">void drive(const float distance, const Amplitude amplitude, const bool backwards)</div><div class="ttdef"><b>Definition:</b> Drives.cpp:194</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a64fc787da95a09c7fdcf47c49862689a"><div class="ttname"><a href="namespacedrives.xhtml#a64fc787da95a09c7fdcf47c49862689a">drives::calibrate</a></div><div class="ttdeci">void calibrate(const float testDistance)</div><div class="ttdef"><b>Definition:</b> Drives.cpp:127</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a7b773dd5e49167b0aa61b673cf3772e3"><div class="ttname"><a href="namespacedrives.xhtml#a7b773dd5e49167b0aa61b673cf3772e3">drives::rotateCounter</a></div><div class="ttdeci">void rotateCounter(const Counter steps, const Amplitude amplitude, bool const clockwise)</div><div class="ttdef"><b>Definition:</b> Drives.cpp:167</div></div>
<div class="ttc" id="anamespacedrives_xhtml_a9b8b1953b75737438f8a70891ff1e02c"><div class="ttname"><a href="namespacedrives.xhtml#a9b8b1953b75737438f8a70891ff1e02c">drives::cruiseSpeed</a></div><div class="ttdeci">constexpr Amplitude cruiseSpeed</div><div class="ttdef"><b>Definition:</b> Drives.hpp:17</div></div>
<div class="ttc" id="anamespacedrives_xhtml_aa2b5d01bb6e3df4a4c22e19701a3b618"><div class="ttname"><a href="namespacedrives.xhtml#aa2b5d01bb6e3df4a4c22e19701a3b618">drives::odoMinIntervalDuration</a></div><div class="ttdeci">constexpr Milliseconds odoMinIntervalDuration</div><div class="ttdoc">Minimum time with buffer factor [ms].</div><div class="ttdef"><b>Definition:</b> Drives.hpp:38</div></div>
<div class="ttc" id="anamespacedrives_xhtml_aae2029fb08266d6a5d567669494bd1e3"><div class="ttname"><a href="namespacedrives.xhtml#aae2029fb08266d6a5d567669494bd1e3">drives::maxAmplitude</a></div><div class="ttdeci">constexpr Amplitude maxAmplitude</div><div class="ttdef"><b>Definition:</b> Drives.hpp:16</div></div>
<div class="ttc" id="anamespacedrives_xhtml_aaf81ed0eff4d976648423ca4c8746afc"><div class="ttname"><a href="namespacedrives.xhtml#aaf81ed0eff4d976648423ca4c8746afc">drives::stepsPerDeg</a></div><div class="ttdeci">constexpr float stepsPerDeg</div><div class="ttdoc">This was measured by rotating by 200 steps and then measuring the rotation.</div><div class="ttdef"><b>Definition:</b> Drives.hpp:22</div></div>
<div class="ttc" id="anamespacedrives_xhtml_abe9c4c70d0f4db4ed4dcbb8d40ced9d5"><div class="ttname"><a href="namespacedrives.xhtml#abe9c4c70d0f4db4ed4dcbb8d40ced9d5">drives::initDrives</a></div><div class="ttdeci">void initDrives()</div><div class="ttdef"><b>Definition:</b> Drives.cpp:242</div></div>
<div class="ttc" id="anamespacedrives_xhtml_ae2737c48a427beb4c656b583c2727aa6"><div class="ttname"><a href="namespacedrives.xhtml#ae2737c48a427beb4c656b583c2727aa6">drives::Counter</a></div><div class="ttdeci">std::uint16_t Counter</div><div class="ttdef"><b>Definition:</b> Drives.hpp:14</div></div>
<div class="ttc" id="anamespacedrives_xhtml_ae4919e6f616adbdf7ddb9469012cc68a"><div class="ttname"><a href="namespacedrives.xhtml#ae4919e6f616adbdf7ddb9469012cc68a">drives::stopDrives</a></div><div class="ttdeci">IRAM_ATTR void stopDrives()</div><div class="ttdef"><b>Definition:</b> Drives.cpp:231</div></div>
<div class="ttc" id="anamespacenumbers_xhtml_abd6cae49912be303d9827e9288bd4fd6"><div class="ttname"><a href="namespacenumbers.xhtml#abd6cae49912be303d9827e9288bd4fd6">numbers::pi</a></div><div class="ttdeci">constexpr double pi</div><div class="ttdef"><b>Definition:</b> numbers.hpp:8</div></div>
<div class="ttc" id="astructPosition_xhtml"><div class="ttname"><a href="structPosition.xhtml">Position</a></div><div class="ttdef"><b>Definition:</b> EnvironmentRecord.hpp:9</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 10 2022 16:26:03 for Robot Control by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4
</small></address>
</body>
</html>
