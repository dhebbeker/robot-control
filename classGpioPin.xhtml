<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Robot Control: GpioPin&lt; PIN &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Robot Control
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="classGpioPin-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">GpioPin&lt; PIN &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Extension of <a class="el" href="classGpioInterface.xhtml" title="Interface for digital input and output pins.">GpioInterface</a> for the processors general purpose input/output pins.  
 <a href="classGpioPin.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="GpioPin_8hpp_source.xhtml">GpioPin.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for GpioPin&lt; PIN &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classGpioPin.png" usemap="#GpioPin_3C_20PIN_20_3E_map" alt=""/>
  <map id="GpioPin_3C_20PIN_20_3E_map" name="GpioPin_3C_20PIN_20_3E_map">
<area href="classGpioInterface.xhtml" title="Interface for digital input and output pins." alt="GpioInterface" shape="rect" coords="0,0,100,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5d9149c5254a9ebd41771f8c4f5e7c33"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioPin.xhtml#a5d9149c5254a9ebd41771f8c4f5e7c33">read</a> () override</td></tr>
<tr class="memdesc:a5d9149c5254a9ebd41771f8c4f5e7c33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the value of the pin.  <a href="classGpioPin.xhtml#a5d9149c5254a9ebd41771f8c4f5e7c33">More...</a><br /></td></tr>
<tr class="separator:a5d9149c5254a9ebd41771f8c4f5e7c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab778727e3d077c767c195318301c6880"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioPin.xhtml#ab778727e3d077c767c195318301c6880">setMode</a> (const std::uint8_t mode) override</td></tr>
<tr class="memdesc:ab778727e3d077c767c195318301c6880"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures the pin to be either input or output.  <a href="classGpioPin.xhtml#ab778727e3d077c767c195318301c6880">More...</a><br /></td></tr>
<tr class="separator:ab778727e3d077c767c195318301c6880"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94f825bb55f253005868d3a0ca16991f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioPin.xhtml#a94f825bb55f253005868d3a0ca16991f">write</a> (const std::uint8_t value) override</td></tr>
<tr class="memdesc:a94f825bb55f253005868d3a0ca16991f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets output value of the pin.  <a href="classGpioPin.xhtml#a94f825bb55f253005868d3a0ca16991f">More...</a><br /></td></tr>
<tr class="separator:a94f825bb55f253005868d3a0ca16991f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44f48926b6e52ab221b689d5248cde99"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioPin.xhtml#a44f48926b6e52ab221b689d5248cde99">setDutyCycle</a> (const int dutyCycle) const</td></tr>
<tr class="memdesc:a44f48926b6e52ab221b689d5248cde99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets PWM duty cycle.  <a href="classGpioPin.xhtml#a44f48926b6e52ab221b689d5248cde99">More...</a><br /></td></tr>
<tr class="separator:a44f48926b6e52ab221b689d5248cde99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classGpioInterface"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classGpioInterface')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classGpioInterface.xhtml">GpioInterface</a></td></tr>
<tr class="memitem:a356832bf3ddbf1aeea2cd6bd0fb73c52 inherit pub_methods_classGpioInterface"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioInterface.xhtml#a356832bf3ddbf1aeea2cd6bd0fb73c52">write</a> (const std::uint8_t value)=0</td></tr>
<tr class="memdesc:a356832bf3ddbf1aeea2cd6bd0fb73c52 inherit pub_methods_classGpioInterface"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets output value of the pin.  <a href="classGpioInterface.xhtml#a356832bf3ddbf1aeea2cd6bd0fb73c52">More...</a><br /></td></tr>
<tr class="separator:a356832bf3ddbf1aeea2cd6bd0fb73c52 inherit pub_methods_classGpioInterface"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16e5050d8bbd0a0ff1c7303478850c41 inherit pub_methods_classGpioInterface"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioInterface.xhtml#a16e5050d8bbd0a0ff1c7303478850c41">read</a> ()=0</td></tr>
<tr class="memdesc:a16e5050d8bbd0a0ff1c7303478850c41 inherit pub_methods_classGpioInterface"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the value of the pin.  <a href="classGpioInterface.xhtml#a16e5050d8bbd0a0ff1c7303478850c41">More...</a><br /></td></tr>
<tr class="separator:a16e5050d8bbd0a0ff1c7303478850c41 inherit pub_methods_classGpioInterface"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c05d78b4e79dfdeeae71d1657fedf79 inherit pub_methods_classGpioInterface"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioInterface.xhtml#a1c05d78b4e79dfdeeae71d1657fedf79">setMode</a> (const std::uint8_t mode)=0</td></tr>
<tr class="memdesc:a1c05d78b4e79dfdeeae71d1657fedf79 inherit pub_methods_classGpioInterface"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures the pin to be either input or output.  <a href="classGpioInterface.xhtml#a1c05d78b4e79dfdeeae71d1657fedf79">More...</a><br /></td></tr>
<tr class="separator:a1c05d78b4e79dfdeeae71d1657fedf79 inherit pub_methods_classGpioInterface"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f35c1f782363818f6ba6c2d711e50ac inherit pub_methods_classGpioInterface"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioInterface.xhtml#a2f35c1f782363818f6ba6c2d711e50ac">~GpioInterface</a> ()=default</td></tr>
<tr class="separator:a2f35c1f782363818f6ba6c2d711e50ac inherit pub_methods_classGpioInterface"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:ab355bfafed7962bc36b92247a1860329"><td class="memItemLeft" align="right" valign="top">static constexpr std::uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioPin.xhtml#ab355bfafed7962bc36b92247a1860329">pin</a> = PIN</td></tr>
<tr class="separator:ab355bfafed7962bc36b92247a1860329"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;std::uint8_t PIN&gt;<br />
class GpioPin&lt; PIN &gt;</div><p >Extension of <a class="el" href="classGpioInterface.xhtml" title="Interface for digital input and output pins.">GpioInterface</a> for the processors general purpose input/output pins. </p>
<p >Adds method to set PWM duty cycle.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">PIN</td><td>is the Arduino pin number </td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a5d9149c5254a9ebd41771f8c4f5e7c33" name="a5d9149c5254a9ebd41771f8c4f5e7c33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d9149c5254a9ebd41771f8c4f5e7c33">&#9670;&nbsp;</a></span>read()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::uint8_t PIN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt;::read </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads the value of the pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Either HIGH or LOW (see Arduino.h). </dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd>Configure the mode to INPUT or INPUT_PULLUP using <a class="el" href="classGpioPin.xhtml#ab778727e3d077c767c195318301c6880" title="Configures the pin to be either input or output.">setMode()</a>. </dd></dl>

<p>Implements <a class="el" href="classGpioInterface.xhtml#a16e5050d8bbd0a0ff1c7303478850c41">GpioInterface</a>.</p>

</div>
</div>
<a id="a44f48926b6e52ab221b689d5248cde99" name="a44f48926b6e52ab221b689d5248cde99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44f48926b6e52ab221b689d5248cde99">&#9670;&nbsp;</a></span>setDutyCycle()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::uint8_t PIN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt;::setDutyCycle </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dutyCycle</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets PWM duty cycle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dutyCycle</td><td>between 0 and 255 </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab778727e3d077c767c195318301c6880" name="ab778727e3d077c767c195318301c6880"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab778727e3d077c767c195318301c6880">&#9670;&nbsp;</a></span>setMode()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::uint8_t PIN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt;::setMode </td>
          <td>(</td>
          <td class="paramtype">const std::uint8_t&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configures the pin to be either input or output. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>INPUT, OUTPUT, or INPUT_PULLUP (see Arduino.h). </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classGpioInterface.xhtml#a1c05d78b4e79dfdeeae71d1657fedf79">GpioInterface</a>.</p>

</div>
</div>
<a id="a94f825bb55f253005868d3a0ca16991f" name="a94f825bb55f253005868d3a0ca16991f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94f825bb55f253005868d3a0ca16991f">&#9670;&nbsp;</a></span>write()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::uint8_t PIN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt;::write </td>
          <td>(</td>
          <td class="paramtype">const std::uint8_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets output value of the pin. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>may be HIGH or LOW (see Arduino.h) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>Configure the mode to OUTPUT using <a class="el" href="classGpioPin.xhtml#ab778727e3d077c767c195318301c6880" title="Configures the pin to be either input or output.">setMode()</a>. </dd></dl>

<p>Implements <a class="el" href="classGpioInterface.xhtml#a356832bf3ddbf1aeea2cd6bd0fb73c52">GpioInterface</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab355bfafed7962bc36b92247a1860329" name="ab355bfafed7962bc36b92247a1860329"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab355bfafed7962bc36b92247a1860329">&#9670;&nbsp;</a></span>pin</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::uint8_t PIN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::uint8_t <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt;::pin = PIN</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>robot-control-src/src/device_drivers/<a class="el" href="GpioPin_8hpp_source.xhtml">GpioPin.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu May 19 2022 09:32:00 for Robot Control by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4
</small></address>
</body>
</html>
