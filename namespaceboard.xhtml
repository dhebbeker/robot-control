<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Robot Control: board Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Robot Control
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">board Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structboard_1_1DistanceSensor.xhtml">DistanceSensor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a7d36f0cae16d6e9df499202919361650"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a7d36f0cae16d6e9df499202919361650">Distance</a> = decltype(VL53L1_RangingMeasurementData_t::RangeMilliMeter)</td></tr>
<tr class="separator:a7d36f0cae16d6e9df499202919361650"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a9dbfac1924f1abc9d1459b0e18841fd0"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a9dbfac1924f1abc9d1459b0e18841fd0">DebugLeds</a> { <br />
&#160;&#160;<a class="el" href="namespaceboard.xhtml#a9dbfac1924f1abc9d1459b0e18841fd0a1348a49604be60623f8b8c0501a3f739">built_in</a>
, <a class="el" href="namespaceboard.xhtml#a9dbfac1924f1abc9d1459b0e18841fd0a9f27410725ab8cc8854a2769c7a516b8">green</a>
, <a class="el" href="namespaceboard.xhtml#a9dbfac1924f1abc9d1459b0e18841fd0ad487dd0b55dfcacdd920ccbdaeafa351">yellow</a>
, <a class="el" href="namespaceboard.xhtml#a9dbfac1924f1abc9d1459b0e18841fd0abda9643ac6601722a28f238714274da4">red</a>
, <br />
&#160;&#160;<a class="el" href="namespaceboard.xhtml#a9dbfac1924f1abc9d1459b0e18841fd0a48d6215903dff56238e52e8891380c8f">blue</a>
<br />
 }</td></tr>
<tr class="separator:a9dbfac1924f1abc9d1459b0e18841fd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a675c679652eabd3c8a3aedac384d47b0"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a675c679652eabd3c8a3aedac384d47b0">DistanceSensorIndex</a> { <a class="el" href="namespaceboard.xhtml#a675c679652eabd3c8a3aedac384d47b0abea8a6ccbc30fb1574eb206227858e72">front_left</a>
, <a class="el" href="namespaceboard.xhtml#a675c679652eabd3c8a3aedac384d47b0a1d408b3efdba0cad53a59c3d4a0e5cde">right</a>
, <a class="el" href="namespaceboard.xhtml#a675c679652eabd3c8a3aedac384d47b0afd9fa48549ca893342492f1742cf8c07">count</a>
 }</td></tr>
<tr class="memdesc:a675c679652eabd3c8a3aedac384d47b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index to match distanceSensors[].  <a href="namespaceboard.xhtml#a675c679652eabd3c8a3aedac384d47b0">More...</a><br /></td></tr>
<tr class="separator:a675c679652eabd3c8a3aedac384d47b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a4627890239e156e84960fdec59318470"><td class="memItemLeft" align="right" valign="top">MCP23017&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a4627890239e156e84960fdec59318470">ioExpander1</a> (ioExpander1Address)</td></tr>
<tr class="separator:a4627890239e156e84960fdec59318470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d8eadc452dfaeb85209f1685b367acc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a0d8eadc452dfaeb85209f1685b367acc">retrieveSensorStatusOrError</a> (const <a class="el" href="namespaceboard.xhtml#a675c679652eabd3c8a3aedac384d47b0">DistanceSensorIndex</a> sensorIndex, <a class="el" href="structPolarVector.xhtml">PolarVector</a> &amp;returnDistance, const std::size_t maxNumberOfAttempts)</td></tr>
<tr class="separator:a0d8eadc452dfaeb85209f1685b367acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee61e533cbd327b3259e0a17265d6361"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#aee61e533cbd327b3259e0a17265d6361">testDistanceSensors</a> ()</td></tr>
<tr class="separator:aee61e533cbd327b3259e0a17265d6361"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae87f3ebcee2ac92c70d1c21053502587"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#ae87f3ebcee2ac92c70d1c21053502587">setup</a> (const <a class="el" href="arduino__helpers_8hpp.xhtml#a276390435f8f238655cb4b091e073f99">InterruptFunctionPointer</a> interruptForBumper)</td></tr>
<tr class="separator:ae87f3ebcee2ac92c70d1c21053502587"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6011a64adcade5a0fb57e61cd63d198f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a6011a64adcade5a0fb57e61cd63d198f">loop</a> ()</td></tr>
<tr class="separator:a6011a64adcade5a0fb57e61cd63d198f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab48d1402797a8b98490b6cc1eb494bbe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#ab48d1402797a8b98490b6cc1eb494bbe">isBumperPressed</a> ()</td></tr>
<tr class="separator:ab48d1402797a8b98490b6cc1eb494bbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adddabdea663eabe807c5dc6ffe242d42"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#adddabdea663eabe807c5dc6ffe242d42">setDebugLed</a> (const std::uint8_t value, const <a class="el" href="namespaceboard.xhtml#a9dbfac1924f1abc9d1459b0e18841fd0">DebugLeds</a> led)</td></tr>
<tr class="separator:adddabdea663eabe807c5dc6ffe242d42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2eebeab88e1976fa6a7efaef1fbf0ca5"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structPolarVector.xhtml">PolarVector</a>(&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a2eebeab88e1976fa6a7efaef1fbf0ca5">getDistances</a> ())[<a class="el" href="namespaceboard.xhtml#a6637f508978fe84f05fa4efd5359059e">numberOfDistanceSensors</a>]</td></tr>
<tr class="separator:a2eebeab88e1976fa6a7efaef1fbf0ca5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a9d6ee8f483fb5846bc3f6f19f1b7f8f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structboard_1_1DistanceSensor.xhtml">DistanceSensor</a> *const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a9d6ee8f483fb5846bc3f6f19f1b7f8f4">distanceSensors</a> []</td></tr>
<tr class="separator:a9d6ee8f483fb5846bc3f6f19f1b7f8f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e6ea3fee5e40dac8c8ee5b42397bb1f"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespaceboard.xhtml#a7d36f0cae16d6e9df499202919361650">Distance</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a8e6ea3fee5e40dac8c8ee5b42397bb1f">distanceErrorValue</a> = std::numeric_limits&lt;<a class="el" href="namespaceboard.xhtml#a7d36f0cae16d6e9df499202919361650">Distance</a>&gt;::max()</td></tr>
<tr class="separator:a8e6ea3fee5e40dac8c8ee5b42397bb1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6637f508978fe84f05fa4efd5359059e"><td class="memItemLeft" align="right" valign="top">constexpr std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a6637f508978fe84f05fa4efd5359059e">numberOfDistanceSensors</a> = static_cast&lt;std::size_t&gt;(DistanceSensorIndex::count)</td></tr>
<tr class="separator:a6637f508978fe84f05fa4efd5359059e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92f6ebfbf52f2d8cac331ec28e2b6b2c"><td class="memItemLeft" align="right" valign="top">MCP23017&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a92f6ebfbf52f2d8cac331ec28e2b6b2c">ioExpander1</a></td></tr>
<tr class="separator:a92f6ebfbf52f2d8cac331ec28e2b6b2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb3ccbe2ed5fb962dbceeb263f1c60c4"><td class="memItemLeft" align="right" valign="top">constexpr std::uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#abb3ccbe2ed5fb962dbceeb263f1c60c4">leftMotor</a> = D1</td></tr>
<tr class="separator:abb3ccbe2ed5fb962dbceeb263f1c60c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fc14ede84ea06bf364b8c7d1c5f6e2c"><td class="memItemLeft" align="right" valign="top">constexpr std::uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a1fc14ede84ea06bf364b8c7d1c5f6e2c">rightMotor</a> = D2</td></tr>
<tr class="separator:a1fc14ede84ea06bf364b8c7d1c5f6e2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135447b68838b9065e365d95b90f5a3a"><td class="memItemLeft" align="right" valign="top">constexpr std::uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a135447b68838b9065e365d95b90f5a3a">rightOdoSignal</a> = D5</td></tr>
<tr class="separator:a135447b68838b9065e365d95b90f5a3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42ad48aad293936fd1d2f15b76d58a31"><td class="memItemLeft" align="right" valign="top">constexpr std::uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a42ad48aad293936fd1d2f15b76d58a31">leftOdoSignal</a> = D6</td></tr>
<tr class="separator:a42ad48aad293936fd1d2f15b76d58a31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77026f1370048a7f9f4c4ee1658dc5d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMCP23017Pin.xhtml">MCP23017Pin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#a77026f1370048a7f9f4c4ee1658dc5d2">leftBackwards</a> (<a class="el" href="namespaceboard.xhtml#a92f6ebfbf52f2d8cac331ec28e2b6b2c">ioExpander1</a>, 8+0)</td></tr>
<tr class="separator:a77026f1370048a7f9f4c4ee1658dc5d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec4c85a4dcdedd2cb49cf0eea8341ed7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMCP23017Pin.xhtml">MCP23017Pin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceboard.xhtml#aec4c85a4dcdedd2cb49cf0eea8341ed7">rightBackwards</a> (<a class="el" href="namespaceboard.xhtml#a92f6ebfbf52f2d8cac331ec28e2b6b2c">ioExpander1</a>, 8+1)</td></tr>
<tr class="separator:aec4c85a4dcdedd2cb49cf0eea8341ed7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a7d36f0cae16d6e9df499202919361650" name="a7d36f0cae16d6e9df499202919361650"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d36f0cae16d6e9df499202919361650">&#9670;&nbsp;</a></span>Distance</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespaceboard.xhtml#a7d36f0cae16d6e9df499202919361650">board::Distance</a> = typedef decltype(VL53L1_RangingMeasurementData_t::RangeMilliMeter)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a9dbfac1924f1abc9d1459b0e18841fd0" name="a9dbfac1924f1abc9d1459b0e18841fd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dbfac1924f1abc9d1459b0e18841fd0">&#9670;&nbsp;</a></span>DebugLeds</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="namespaceboard.xhtml#a9dbfac1924f1abc9d1459b0e18841fd0">board::DebugLeds</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a9dbfac1924f1abc9d1459b0e18841fd0a1348a49604be60623f8b8c0501a3f739" name="a9dbfac1924f1abc9d1459b0e18841fd0a1348a49604be60623f8b8c0501a3f739"></a>built_in&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9dbfac1924f1abc9d1459b0e18841fd0a9f27410725ab8cc8854a2769c7a516b8" name="a9dbfac1924f1abc9d1459b0e18841fd0a9f27410725ab8cc8854a2769c7a516b8"></a>green&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9dbfac1924f1abc9d1459b0e18841fd0ad487dd0b55dfcacdd920ccbdaeafa351" name="a9dbfac1924f1abc9d1459b0e18841fd0ad487dd0b55dfcacdd920ccbdaeafa351"></a>yellow&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9dbfac1924f1abc9d1459b0e18841fd0abda9643ac6601722a28f238714274da4" name="a9dbfac1924f1abc9d1459b0e18841fd0abda9643ac6601722a28f238714274da4"></a>red&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9dbfac1924f1abc9d1459b0e18841fd0a48d6215903dff56238e52e8891380c8f" name="a9dbfac1924f1abc9d1459b0e18841fd0a48d6215903dff56238e52e8891380c8f"></a>blue&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a675c679652eabd3c8a3aedac384d47b0" name="a675c679652eabd3c8a3aedac384d47b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a675c679652eabd3c8a3aedac384d47b0">&#9670;&nbsp;</a></span>DistanceSensorIndex</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespaceboard.xhtml#a675c679652eabd3c8a3aedac384d47b0">board::DistanceSensorIndex</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Index to match distanceSensors[]. </p>
<p >Does not necessarily match the numbers written on the devices. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a675c679652eabd3c8a3aedac384d47b0abea8a6ccbc30fb1574eb206227858e72" name="a675c679652eabd3c8a3aedac384d47b0abea8a6ccbc30fb1574eb206227858e72"></a>front_left&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a675c679652eabd3c8a3aedac384d47b0a1d408b3efdba0cad53a59c3d4a0e5cde" name="a675c679652eabd3c8a3aedac384d47b0a1d408b3efdba0cad53a59c3d4a0e5cde"></a>right&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a675c679652eabd3c8a3aedac384d47b0afd9fa48549ca893342492f1742cf8c07" name="a675c679652eabd3c8a3aedac384d47b0afd9fa48549ca893342492f1742cf8c07"></a>count&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a2eebeab88e1976fa6a7efaef1fbf0ca5" name="a2eebeab88e1976fa6a7efaef1fbf0ca5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2eebeab88e1976fa6a7efaef1fbf0ca5">&#9670;&nbsp;</a></span>getDistances()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structPolarVector.xhtml">PolarVector</a>(&amp; board::getDistances </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>)[numberOfDistanceSensors]</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4627890239e156e84960fdec59318470" name="a4627890239e156e84960fdec59318470"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4627890239e156e84960fdec59318470">&#9670;&nbsp;</a></span>ioExpander1()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">MCP23017 board::ioExpander1 </td>
          <td>(</td>
          <td class="paramtype">ioExpander1Address&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab48d1402797a8b98490b6cc1eb494bbe" name="ab48d1402797a8b98490b6cc1eb494bbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab48d1402797a8b98490b6cc1eb494bbe">&#9670;&nbsp;</a></span>isBumperPressed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool board::isBumperPressed </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6011a64adcade5a0fb57e61cd63d198f" name="a6011a64adcade5a0fb57e61cd63d198f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6011a64adcade5a0fb57e61cd63d198f">&#9670;&nbsp;</a></span>loop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void board::loop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0d8eadc452dfaeb85209f1685b367acc" name="a0d8eadc452dfaeb85209f1685b367acc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d8eadc452dfaeb85209f1685b367acc">&#9670;&nbsp;</a></span>retrieveSensorStatusOrError()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool board::retrieveSensorStatusOrError </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceboard.xhtml#a675c679652eabd3c8a3aedac384d47b0">DistanceSensorIndex</a>&#160;</td>
          <td class="paramname"><em>sensorIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structPolarVector.xhtml">PolarVector</a> &amp;&#160;</td>
          <td class="paramname"><em>returnDistance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::size_t&#160;</td>
          <td class="paramname"><em>maxNumberOfAttempts</em> = <code>3</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">returnDistance</td><td>measured distance will be written to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>false on error </dd></dl>

</div>
</div>
<a id="adddabdea663eabe807c5dc6ffe242d42" name="adddabdea663eabe807c5dc6ffe242d42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adddabdea663eabe807c5dc6ffe242d42">&#9670;&nbsp;</a></span>setDebugLed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void board::setDebugLed </td>
          <td>(</td>
          <td class="paramtype">const std::uint8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceboard.xhtml#a9dbfac1924f1abc9d1459b0e18841fd0">DebugLeds</a>&#160;</td>
          <td class="paramname"><em>led</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae87f3ebcee2ac92c70d1c21053502587" name="ae87f3ebcee2ac92c70d1c21053502587"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae87f3ebcee2ac92c70d1c21053502587">&#9670;&nbsp;</a></span>setup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void board::setup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="arduino__helpers_8hpp.xhtml#a276390435f8f238655cb4b091e073f99">InterruptFunctionPointer</a>&#160;</td>
          <td class="paramname"><em>interruptForBumper</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aee61e533cbd327b3259e0a17265d6361" name="aee61e533cbd327b3259e0a17265d6361"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee61e533cbd327b3259e0a17265d6361">&#9670;&nbsp;</a></span>testDistanceSensors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void board::testDistanceSensors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a8e6ea3fee5e40dac8c8ee5b42397bb1f" name="a8e6ea3fee5e40dac8c8ee5b42397bb1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e6ea3fee5e40dac8c8ee5b42397bb1f">&#9670;&nbsp;</a></span>distanceErrorValue</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="namespaceboard.xhtml#a7d36f0cae16d6e9df499202919361650">Distance</a> board::distanceErrorValue = std::numeric_limits&lt;<a class="el" href="namespaceboard.xhtml#a7d36f0cae16d6e9df499202919361650">Distance</a>&gt;::max()</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9d6ee8f483fb5846bc3f6f19f1b7f8f4" name="a9d6ee8f483fb5846bc3f6f19f1b7f8f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d6ee8f483fb5846bc3f6f19f1b7f8f4">&#9670;&nbsp;</a></span>distanceSensors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structboard_1_1DistanceSensor.xhtml">DistanceSensor</a>* const board::distanceSensors[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div>
<div class="line">        &amp;distanceSensor1,</div>
<div class="line">        &amp;distanceSensor4,</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a92f6ebfbf52f2d8cac331ec28e2b6b2c" name="a92f6ebfbf52f2d8cac331ec28e2b6b2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92f6ebfbf52f2d8cac331ec28e2b6b2c">&#9670;&nbsp;</a></span>ioExpander1</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MCP23017 board::ioExpander1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a77026f1370048a7f9f4c4ee1658dc5d2" name="a77026f1370048a7f9f4c4ee1658dc5d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77026f1370048a7f9f4c4ee1658dc5d2">&#9670;&nbsp;</a></span>leftBackwards</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMCP23017Pin.xhtml">MCP23017Pin</a> board::leftBackwards(<a class="el" href="namespaceboard.xhtml#a92f6ebfbf52f2d8cac331ec28e2b6b2c">ioExpander1</a>, 8+0) </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceboard.xhtml#a92f6ebfbf52f2d8cac331ec28e2b6b2c">ioExpander1</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">8+&#160;</td>
          <td class="paramname"><em>0</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abb3ccbe2ed5fb962dbceeb263f1c60c4" name="abb3ccbe2ed5fb962dbceeb263f1c60c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb3ccbe2ed5fb962dbceeb263f1c60c4">&#9670;&nbsp;</a></span>leftMotor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::uint8_t board::leftMotor = D1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a42ad48aad293936fd1d2f15b76d58a31" name="a42ad48aad293936fd1d2f15b76d58a31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42ad48aad293936fd1d2f15b76d58a31">&#9670;&nbsp;</a></span>leftOdoSignal</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::uint8_t board::leftOdoSignal = D6</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6637f508978fe84f05fa4efd5359059e" name="a6637f508978fe84f05fa4efd5359059e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6637f508978fe84f05fa4efd5359059e">&#9670;&nbsp;</a></span>numberOfDistanceSensors</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::size_t board::numberOfDistanceSensors = static_cast&lt;std::size_t&gt;(DistanceSensorIndex::count)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aec4c85a4dcdedd2cb49cf0eea8341ed7" name="aec4c85a4dcdedd2cb49cf0eea8341ed7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec4c85a4dcdedd2cb49cf0eea8341ed7">&#9670;&nbsp;</a></span>rightBackwards</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMCP23017Pin.xhtml">MCP23017Pin</a> board::rightBackwards(<a class="el" href="namespaceboard.xhtml#a92f6ebfbf52f2d8cac331ec28e2b6b2c">ioExpander1</a>, 8+1) </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceboard.xhtml#a92f6ebfbf52f2d8cac331ec28e2b6b2c">ioExpander1</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">8+&#160;</td>
          <td class="paramname"><em>1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1fc14ede84ea06bf364b8c7d1c5f6e2c" name="a1fc14ede84ea06bf364b8c7d1c5f6e2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fc14ede84ea06bf364b8c7d1c5f6e2c">&#9670;&nbsp;</a></span>rightMotor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::uint8_t board::rightMotor = D2</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a135447b68838b9065e365d95b90f5a3a" name="a135447b68838b9065e365d95b90f5a3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a135447b68838b9065e365d95b90f5a3a">&#9670;&nbsp;</a></span>rightOdoSignal</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::uint8_t board::rightOdoSignal = D5</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Jul 25 2022 10:42:09 for Robot Control by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4
</small></address>
</body>
</html>
