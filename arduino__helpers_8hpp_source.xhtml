<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Robot Control: robot-control-src/src/utils/arduino_helpers.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Robot Control
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11fcc4a44a9b64dfb7d33c3f0a78b9e9.xhtml">robot-control-src</a></li><li class="navelem"><a class="el" href="dir_2db2811a5034f27e35c4073bde1407d6.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_609ebbef7d9993506f20c6d1bfb81661.xhtml">utils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">arduino_helpers.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="arduino__helpers_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef UTILS_ARDUINO_HELPERS_HPP_</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define UTILS_ARDUINO_HELPERS_HPP_</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Arduino.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="Debug_8hpp.xhtml">Debug.hpp</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#if defined(round)</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#undef round </span><span class="comment">//see https://github.com/esp8266/Arduino/issues/5787#issuecomment-465852231</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="preprocessor">#if defined(abs)</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="preprocessor">#undef abs </span><span class="comment">// else it conflicts with std::abs</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">   17</a></span><span class="keyword">using </span><a class="code hl_typedef" href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a> = <span class="keyword">decltype</span>(millis());</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="arduino__helpers_8hpp.xhtml#a276390435f8f238655cb4b091e073f99">   18</a></span><span class="keyword">using </span><a class="code hl_typedef" href="arduino__helpers_8hpp.xhtml#a276390435f8f238655cb4b091e073f99">InterruptFunctionPointer</a> = void (*)(void);</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="arduino__helpers_8hpp.xhtml#a96949e0e0e31da23284790a4a52d9859">   19</a></span><span class="keyword">using </span><a class="code hl_typedef" href="arduino__helpers_8hpp.xhtml#a96949e0e0e31da23284790a4a52d9859">SerialCharacter</a> = <span class="keyword">decltype</span>(std::declval&lt;Stream&gt;().read());</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="preprocessor">#if !defined(NDEBUG)</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="preprocessor">#include &lt;Esp.h&gt;</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno"><a class="line" href="arduino__helpers_8hpp.xhtml#a8a40d3489d8d1b60ee4760237c9c4d6d">   23</a></span><span class="preprocessor">#define new_s_pre( T ) \</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="preprocessor">  { \</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="preprocessor">    const auto sizeAvailable = ESP.getMaxFreeBlockSize(); \</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="preprocessor">    const auto sizeNeeded = sizeof(T); \</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="preprocessor">    DEBUG_MSG_PROFILER(&quot;Try to allocate &#39;%lu&#39; bytes (&#39;%lu&#39; available).&quot;</span>, sizeNeeded, sizeAvailable); \</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    assert(sizeNeeded &lt;= sizeAvailable); \</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="arduino__helpers_8hpp.xhtml#a80a06d1283ab262fef58bbc2cb93e847">   31</a></span><span class="preprocessor">#define new_s( T ) \</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="preprocessor">  [&amp;](){ \</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="preprocessor">    new_s_pre( T ) \</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="preprocessor">    const auto p = new T; \</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="preprocessor">    assert(p != nullptr); \</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="preprocessor">    return p; \</span></div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="preprocessor">  }();</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#define new_s_pre( T ) </span><span class="comment">// empty on purpose</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define new_s( T ) new T</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="arduino__helpers_8hpp.xhtml#aec0d292bc8d3527e73560b6cc9aa3c8a">   56</a></span><span class="preprocessor">#define WAIT_AND_RETURN( duration ) \</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="preprocessor">{ \</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="preprocessor">  static bool waitStarted = false; \</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span><span class="preprocessor">  static Milliseconds startTime; \</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span><span class="preprocessor">  if(!waitStarted) \</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="preprocessor">  { \</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="preprocessor">    startTime = millis(); \</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="preprocessor">    waitStarted = true; \</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="preprocessor">  } \</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span><span class="preprocessor"> \</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span><span class="preprocessor">  if(millis() &gt; startTime + duration) \</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="preprocessor">  { \</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span><span class="preprocessor">    waitStarted = false; \</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span><span class="preprocessor">  } \</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span><span class="preprocessor">  else \</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span><span class="preprocessor">  { \</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span><span class="preprocessor">    return; \</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span><span class="preprocessor">  } \</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="preprocessor">}</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="keywordtype">bool</span> <a class="code hl_function" href="arduino__helpers_8hpp.xhtml#ac0d485fe2c7a4293a31164af952679b6">readFromSerial</a>(<a class="code hl_typedef" href="arduino__helpers_8hpp.xhtml#a96949e0e0e31da23284790a4a52d9859">SerialCharacter</a> * <span class="keyword">const</span> buffer = <span class="keyword">nullptr</span>, <span class="keyword">const</span> std::size_t numberOfCharacters = 0, Stream&amp; iostream = Serial);</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="preprocessor">#endif </span><span class="comment">/* UTILS_ARDUINO_HELPERS_HPP_ */</span><span class="preprocessor"></span></div>
<div class="ttc" id="aDebug_8hpp_xhtml"><div class="ttname"><a href="Debug_8hpp.xhtml">Debug.hpp</a></div></div>
<div class="ttc" id="aarduino__helpers_8hpp_xhtml_a276390435f8f238655cb4b091e073f99"><div class="ttname"><a href="arduino__helpers_8hpp.xhtml#a276390435f8f238655cb4b091e073f99">InterruptFunctionPointer</a></div><div class="ttdeci">void(*)(void) InterruptFunctionPointer</div><div class="ttdef"><b>Definition:</b> arduino_helpers.hpp:18</div></div>
<div class="ttc" id="aarduino__helpers_8hpp_xhtml_a96949e0e0e31da23284790a4a52d9859"><div class="ttname"><a href="arduino__helpers_8hpp.xhtml#a96949e0e0e31da23284790a4a52d9859">SerialCharacter</a></div><div class="ttdeci">decltype(std::declval&lt; Stream &gt;().read()) SerialCharacter</div><div class="ttdef"><b>Definition:</b> arduino_helpers.hpp:19</div></div>
<div class="ttc" id="aarduino__helpers_8hpp_xhtml_ac0d485fe2c7a4293a31164af952679b6"><div class="ttname"><a href="arduino__helpers_8hpp.xhtml#ac0d485fe2c7a4293a31164af952679b6">readFromSerial</a></div><div class="ttdeci">bool readFromSerial(SerialCharacter *const buffer=nullptr, const std::size_t numberOfCharacters=0, Stream &amp;iostream=Serial)</div><div class="ttdoc">Prompts the user to enter characters and ENTER.</div><div class="ttdef"><b>Definition:</b> arduino_helpers.cpp:4</div></div>
<div class="ttc" id="aarduino__helpers_8hpp_xhtml_ac62a9082d92d4305cd25b063e44b268c"><div class="ttname"><a href="arduino__helpers_8hpp.xhtml#ac62a9082d92d4305cd25b063e44b268c">Milliseconds</a></div><div class="ttdeci">decltype(millis()) Milliseconds</div><div class="ttdef"><b>Definition:</b> arduino_helpers.hpp:17</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Jul 25 2022 10:42:08 for Robot Control by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4
</small></address>
</body>
</html>
