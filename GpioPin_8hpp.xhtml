<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Robot Control: robot-control-src/src/device_drivers/GpioPin.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Robot Control
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_11fcc4a44a9b64dfb7d33c3f0a78b9e9.xhtml">robot-control-src</a></li><li class="navelem"><a class="el" href="dir_2db2811a5034f27e35c4073bde1407d6.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_3e2ed7453ca5ca7497cbb343ec5079ea.xhtml">device_drivers</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a>  </div>
  <div class="headertitle"><div class="title">GpioPin.hpp File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="GpioInterface_8hpp_source.xhtml">GpioInterface.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arduino__helpers_8hpp_source.xhtml">../utils/arduino_helpers.hpp</a>&quot;</code><br />
<code>#include &lt;Arduino.h&gt;</code><br />
</div>
<p><a href="GpioPin_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGpioPin.xhtml">GpioPin&lt; PIN &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extension of <a class="el" href="classGpioInterface.xhtml" title="Interface for digital input and output pins.">GpioInterface</a> for the processors general purpose input/output pins.  <a href="classGpioPin.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Function overload for GpioPin objects.</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p >These functions provide an interface to <a class="el" href="classGpioPin.xhtml" title="Extension of GpioInterface for the processors general purpose input/output pins.">GpioPin</a> objects compatible to the Arduino library functions. </p>
</div></td></tr>
<tr class="memitem:a1df1ff5b216268e3ae64f753f38a7b54"><td class="memTemplParams" colspan="2">template&lt;std::uint8_t PIN&gt; </td></tr>
<tr class="memitem:a1df1ff5b216268e3ae64f753f38a7b54"><td class="memTemplItemLeft" align="right" valign="top">int constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="GpioPin_8hpp.xhtml#a1df1ff5b216268e3ae64f753f38a7b54">digitalPinToInterrupt</a> (const <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt; &amp;gpio)</td></tr>
<tr class="memdesc:a1df1ff5b216268e3ae64f753f38a7b54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for the interrupt number for a digital input pin.  <a href="GpioPin_8hpp.xhtml#a1df1ff5b216268e3ae64f753f38a7b54">More...</a><br /></td></tr>
<tr class="separator:a1df1ff5b216268e3ae64f753f38a7b54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5441970081254d8f00ace3ad774b3fee"><td class="memTemplParams" colspan="2">template&lt;std::uint8_t PIN&gt; </td></tr>
<tr class="memitem:a5441970081254d8f00ace3ad774b3fee"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="GpioPin_8hpp.xhtml#a5441970081254d8f00ace3ad774b3fee">attachInterrupt</a> (const <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt; &amp;gpio, const <a class="el" href="arduino__helpers_8hpp.xhtml#a276390435f8f238655cb4b091e073f99">InterruptFunctionPointer</a> interruptServiceRoutine, const int mode)</td></tr>
<tr class="memdesc:a5441970081254d8f00ace3ad774b3fee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attach function to be called on external interrupt.  <a href="GpioPin_8hpp.xhtml#a5441970081254d8f00ace3ad774b3fee">More...</a><br /></td></tr>
<tr class="separator:a5441970081254d8f00ace3ad774b3fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affab782c5ee6662dd2e5d0c48aae4777"><td class="memTemplParams" colspan="2">template&lt;std::uint8_t PIN&gt; </td></tr>
<tr class="memitem:affab782c5ee6662dd2e5d0c48aae4777"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="GpioPin_8hpp.xhtml#affab782c5ee6662dd2e5d0c48aae4777">analogWrite</a> (const <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt; &amp;gpio, const int dutyCycle)</td></tr>
<tr class="memdesc:affab782c5ee6662dd2e5d0c48aae4777"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets PWM duty cycle to pin.  <a href="GpioPin_8hpp.xhtml#affab782c5ee6662dd2e5d0c48aae4777">More...</a><br /></td></tr>
<tr class="separator:affab782c5ee6662dd2e5d0c48aae4777"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="affab782c5ee6662dd2e5d0c48aae4777" name="affab782c5ee6662dd2e5d0c48aae4777"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affab782c5ee6662dd2e5d0c48aae4777">&#9670;&nbsp;</a></span>analogWrite()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::uint8_t PIN&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void analogWrite </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt; &amp;&#160;</td>
          <td class="paramname"><em>gpio</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dutyCycle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets PWM duty cycle to pin. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">PIN</td><td>is the Arduino pin number </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">gpio</td><td>output pin to set duty cycle to. </td></tr>
    <tr><td class="paramname">dutyCycle</td><td>between 0 and 255 </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5441970081254d8f00ace3ad774b3fee" name="a5441970081254d8f00ace3ad774b3fee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5441970081254d8f00ace3ad774b3fee">&#9670;&nbsp;</a></span>attachInterrupt()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::uint8_t PIN&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void attachInterrupt </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt; &amp;&#160;</td>
          <td class="paramname"><em>gpio</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="arduino__helpers_8hpp.xhtml#a276390435f8f238655cb4b091e073f99">InterruptFunctionPointer</a>&#160;</td>
          <td class="paramname"><em>interruptServiceRoutine</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Attach function to be called on external interrupt. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">gpio</td><td>is the input pin to attach interrupt to </td></tr>
    <tr><td class="paramname">interruptServiceRoutine</td><td>is the function to be called when interrupt occurs </td></tr>
    <tr><td class="paramname">mode</td><td>may be LOW, CHANGE, RISING, FALLING (see Arduino.h) </td></tr>
  </table>
  </dd>
</dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">PIN</td><td>is the Arduino pin number </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1df1ff5b216268e3ae64f753f38a7b54" name="a1df1ff5b216268e3ae64f753f38a7b54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1df1ff5b216268e3ae64f753f38a7b54">&#9670;&nbsp;</a></span>digitalPinToInterrupt()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::uint8_t PIN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int constexpr digitalPinToInterrupt </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classGpioPin.xhtml">GpioPin</a>&lt; PIN &gt; &amp;&#160;</td>
          <td class="paramname"><em>gpio</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Getter for the interrupt number for a digital input pin. </p>
<p >This is an overload to <a class="el" href="GpioPin_8hpp.xhtml#a1df1ff5b216268e3ae64f753f38a7b54" title="Getter for the interrupt number for a digital input pin.">digitalPinToInterrupt()</a>. </p><dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">PIN</td><td>is the Arduino pin number </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>interrupt number </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu May 19 2022 09:32:00 for Robot Control by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4
</small></address>
</body>
</html>
